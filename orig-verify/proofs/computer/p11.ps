%!PS-Adobe-2.0
%%Creator: dvips(k) 5.95a Copyright 2005 Radical Eye Software
%%Title: phil.dvi
%%Pages: 1
%%PageOrder: Ascend
%%BoundingBox: 0 0 595 842
%%DocumentFonts: CMR5 CMR10
%%DocumentPaperSizes: a4
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips phil
%DVIPSParameters: dpi=600
%DVIPSSource:  TeX output 2006.01.21:2154
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/p{show}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0 N/Ry 0 N/V{}B/RV/v{
/Ry X/Rx X V}B statusdict begin/product where{pop false[(Display)(NeXT)
(LaserWriter 16/600)]{A length product length le{A length product exch 0
exch getinterval eq{pop true exit}if}{pop}ifelse}forall}{false}ifelse
end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{BDot}imagemask
grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat{BDot}
imagemask grestore}}ifelse B/QV{gsave newpath transform round exch round
exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0 rlineto
fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B/M{S p
delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}B/g{0 M}
B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p -3 w}B/n{
p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{0 S
rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: pstricks.pro 0 0
%!
% PostScript prologue for pstricks.tex.
% Version 97 patch 4, 04/05/10
% For distribution, see pstricks.tex.
%
/tx@Dict 200 dict def tx@Dict begin
/ADict 25 dict def
/CM { matrix currentmatrix } bind def
/SLW /setlinewidth load def
/CLW /currentlinewidth load def
/CP /currentpoint load def
/ED { exch def } bind def
/L /lineto load def
/T /translate load def
/TMatrix { } def
/RAngle { 0 } def
/Atan { /atan load stopped { pop pop 0 } if } def
/Div { dup 0 eq { pop } { div } ifelse } def
/NET { neg exch neg exch T } def
/Pyth { dup mul exch dup mul add sqrt } def
/PtoC { 2 copy cos mul 3 1 roll sin mul } def
/PathLength@ { /z z y y1 sub x x1 sub Pyth add def /y1 y def /x1 x def }
def
/PathLength { flattenpath /z 0 def { /y1 ED /x1 ED /y2 y1 def /x2 x1 def
} { /y ED /x ED PathLength@ } {} { /y y2 def /x x2 def PathLength@ }
/pathforall load stopped { pop pop pop pop } if z } def
/STP { .996264 dup scale } def
/STV { SDict begin normalscale end STP  } def
%
%%-------------- DG begin patch 15 ---------------%%
%/DashLine { dup 0 gt { /a .5 def PathLength exch div } { pop /a 1 def
%PathLength } ifelse /b ED /x ED /y ED /z y x add def b a .5 sub 2 mul y
%mul sub z Div round z mul a .5 sub 2 mul y mul add b exch Div dup y mul
%/y ED x mul /x ED x 0 gt y 0 gt and { [ y x ] 1 a sub y mul } { [ 1 0 ]
%0 } ifelse setdash stroke } def
/DashLine {
  dup 0 gt { /a .5 def PathLength exch div } { pop /a 1 def PathLength } ifelse
  /b ED /x1 ED /y1 ED /x ED /y ED 
  /z y x add y1 add x1 add def
  /Coef b a .5 sub 2 mul y mul sub z Div round 
  z mul a .5 sub 2 mul y mul add b exch Div def 
  /y y Coef mul def /x x Coef mul def /y1 y1 Coef mul def /x1 x1 Coef mul def
  x1 0 gt y1 0 gt x 0 gt y 0 gt and { [ y x y1 x1 ] 1 a sub y mul}
  { [ 1 0] 0 } ifelse setdash stroke
} def
%%-------------- DG end patch 15 ---------------%%
/DotLine { /b PathLength def /a ED /z ED /y CLW def /z y z add def a 0 gt
{ /b b a div def } { a 0 eq { /b b y sub def } { a -3 eq { /b b y add
def } if } ifelse } ifelse [ 0 b b z Div round Div dup 0 le { pop 1 } if
] a 0 gt { 0 } { y 2 div a -2 gt { neg } if } ifelse setdash 1
setlinecap stroke } def
/LineFill { gsave abs CLW add /a ED a 0 dtransform round exch round exch
2 copy idtransform exch Atan rotate idtransform pop /a ED .25 .25
% DG/SR modification begin - Dec. 12, 1997 - Patch 2
%itransform translate pathbbox /y2 ED a Div ceiling cvi /x2 ED /y1 ED a
itransform pathbbox /y2 ED a Div ceiling cvi /x2 ED /y1 ED a
% DG/SR modification end
Div cvi /x1 ED /y2 y2 y1 sub def clip newpath 2 setlinecap systemdict
/setstrokeadjust known { true setstrokeadjust } if x2 x1 sub 1 add { x1
% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
% a mul y1 moveto 0 y2 rlineto stroke /x1 x1 1 add def } repeat grestore }
% def
a mul y1 moveto 0 y2 rlineto stroke /x1 x1 1 add def } repeat grestore
pop pop } def
% DG/SR modification end
/BeginArrow { ADict begin /@mtrx CM def gsave 2 copy T 2 index sub neg
exch 3 index sub exch Atan rotate newpath } def
/EndArrow { @mtrx setmatrix CP grestore end } def
/Arrow { CLW mul add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1
scale } if w neg h moveto 0 0 L w h L w neg a neg rlineto gsave fill
grestore } def
/Tbar { CLW mul add /z ED z -2 div CLW 2 div moveto z 0 rlineto stroke 0
CLW moveto } def
/Bracket { CLW mul add dup CLW sub 2 div /x ED mul CLW add /y ED /z CLW 2
div def x neg y moveto x neg CLW 2 div L x CLW 2 div L x y L stroke 0
CLW moveto } def
/RoundBracket { CLW mul add dup 2 div /x ED mul /y ED /mtrx CM def 0 CLW
2 div T x y mul 0 ne { x y scale } if 1 1 moveto .85 .5 .35 0 0 0
curveto -.35 0 -.85 .5 -1 1 curveto mtrx setmatrix stroke 0 CLW moveto }
def
/SD { 0 360 arc fill } def
/EndDot { { /z DS def } { /z 0 def } ifelse /b ED 0 z DS SD b { 0 z DS
CLW sub SD } if 0 DS z add CLW 4 div sub moveto } def
/Shadow { [ { /moveto load } { /lineto load } { /curveto load } {
/closepath load } /pathforall load stopped { pop pop pop pop CP /moveto
load } if ] cvx newpath 3 1 roll T exec } def
/NArray { aload length 2 div dup dup cvi eq not { exch pop } if /n exch
cvi def } def
/NArray { /f ED counttomark 2 div dup cvi /n ED n eq not { exch pop } if
f { ] aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse } def
/Line { NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if ArrowA /n n 2 sub
def n { Lineto } repeat CP 4 2 roll ArrowB L pop pop } if } def
/Arcto { /a [ 6 -2 roll ] cvx def a r /arcto load stopped { 5 } { 4 }
ifelse { pop } repeat a } def
/CheckClosed { dup n 2 mul 1 sub index eq 2 index n 2 mul 1 add index eq
and { pop pop /n n 1 sub def } if } def
/Polygon { NArray n 2 eq { 0 0 /n 3 def } if n 3 lt { n { pop pop }
repeat } { n 3 gt { CheckClosed } if n 2 mul -2 roll /y0 ED /x0 ED /y1
ED /x1 ED x1 y1 /x1 x0 x1 add 2 div def /y1 y0 y1 add 2 div def x1 y1
moveto /n n 2 sub def n { Lineto } repeat x1 y1 x0 y0 6 4 roll Lineto
Lineto pop pop closepath } ifelse } def
/Diamond { /mtrx CM def T rotate /h ED /w ED dup 0 eq { pop } { CLW mul
neg /d ED /a w h Atan def /h d a sin Div h add def /w d a cos Div w add
def } ifelse mark w 2 div h 2 div w 0 0 h neg w neg 0 0 h w 2 div h 2
div /ArrowA { moveto } def /ArrowB { } def false Line closepath mtrx
setmatrix } def
% DG modification begin - Jan. 15, 1997
%/Triangle { /mtrx CM def translate rotate /h ED 2 div /w ED dup 0 eq {
%pop } { CLW mul /d ED /h h d w h Atan sin Div sub def /w w d h w Atan 2
%div dup cos exch sin Div mul sub def } ifelse mark 0 d w neg d 0 h w d 0
%d /ArrowA { moveto } def /ArrowB { } def false Line closepath mtrx
%setmatrix } def
/Triangle { /mtrx CM def translate rotate /h ED 2 div /w ED dup
CLW mul /d ED /h h d w h Atan sin Div sub def /w w d h w Atan 2
div dup cos exch sin Div mul sub def mark 0 d w neg d 0 h w d 0
d /ArrowA { moveto } def /ArrowB { } def false Line closepath mtrx
% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
% setmatrix } def
setmatrix pop } def
% DG/SR modification end
/CCA { /y ED /x ED 2 copy y sub /dy1 ED x sub /dx1 ED /l1 dx1 dy1 Pyth
def } def
/CCA { /y ED /x ED 2 copy y sub /dy1 ED x sub /dx1 ED /l1 dx1 dy1 Pyth
def } def
/CC { /l0 l1 def /x1 x dx sub def /y1 y dy sub def /dx0 dx1 def /dy0 dy1
def CCA /dx dx0 l1 c exp mul dx1 l0 c exp mul add def /dy dy0 l1 c exp
mul dy1 l0 c exp mul add def /m dx0 dy0 Atan dx1 dy1 Atan sub 2 div cos
abs b exp a mul dx dy Pyth Div 2 div def /x2 x l0 dx mul m mul sub def
/y2 y l0 dy mul m mul sub def /dx l1 dx mul m mul neg def /dy l1 dy mul
m mul neg def } def
/IC { /c c 1 add def c 0 lt { /c 0 def } { c 3 gt { /c 3 def } if }
ifelse /a a 2 mul 3 div 45 cos b exp div def CCA /dx 0 def /dy 0 def }
def
/BOC { IC CC x2 y2 x1 y1 ArrowA CP 4 2 roll x y curveto } def
/NC { CC x1 y1 x2 y2 x y curveto } def
/EOC { x dx sub y dy sub 4 2 roll ArrowB 2 copy curveto } def
/BAC { IC CC x y moveto CC x1 y1 CP ArrowA } def
/NAC { x2 y2 x y curveto CC x1 y1 } def
/EAC { x2 y2 x y ArrowB curveto pop pop } def
/OpenCurve { NArray n 3 lt { n { pop pop } repeat } { BOC /n n 3 sub def
    n { NC } repeat EOC } ifelse } def
/AltCurve { { false NArray n 2 mul 2 roll [ n 2 mul 3 sub 1 roll ] aload
/Points ED n 2 mul -2 roll } { false NArray } ifelse n 4 lt { n { pop
pop } repeat } { BAC /n n 4 sub def n { NAC } repeat EAC } ifelse } def
/ClosedCurve { NArray n 3 lt { n { pop pop } repeat } { n 3 gt {
CheckClosed } if 6 copy n 2 mul 6 add 6 roll IC CC x y moveto n { NC }
repeat closepath pop pop } ifelse } def
/SQ { /r ED r r moveto r r neg L r neg r neg L r neg r L fill } def
/ST { /y ED /x ED x y moveto x neg y L 0 x L fill } def
/SP { /r ED gsave 0 r moveto 4 { 72 rotate 0 r L } repeat fill grestore }
def
/FontDot { DS 2 mul dup matrix scale matrix concatmatrix exch matrix
rotate matrix concatmatrix exch findfont exch makefont setfont } def
/Rect { x1 y1 y2 add 2 div moveto x1 y2 lineto x2 y2 lineto x2 y1 lineto
x1 y1 lineto closepath } def
/OvalFrame { x1 x2 eq y1 y2 eq or { pop pop x1 y1 moveto x2 y2 L } { y1
y2 sub abs x1 x2 sub abs 2 copy gt { exch pop } { pop } ifelse 2 div
exch { dup 3 1 roll mul exch } if 2 copy lt { pop } { exch pop } ifelse
/b ED x1 y1 y2 add 2 div moveto x1 y2 x2 y2 b arcto x2 y2 x2 y1 b arcto
x2 y1 x1 y1 b arcto x1 y1 x1 y2 b arcto 16 { pop } repeat closepath }
ifelse } def
/Frame { CLW mul /a ED 3 -1 roll 2 copy gt { exch } if a sub /y2 ED a add
/y1 ED 2 copy gt { exch } if a sub /x2 ED a add /x1 ED 1 index 0 eq {
pop pop Rect } { OvalFrame } ifelse } def
/BezierNArray { /f ED counttomark 2 div dup cvi /n ED n eq not { exch pop
} if n 1 sub neg 3 mod 3 add 3 mod { 0 0 /n n 1 add def } repeat f { ]
aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse } def
/OpenBezier { BezierNArray n 1 eq { pop pop } { ArrowA n 4 sub 3 idiv { 6
2 roll 4 2 roll curveto } repeat 6 2 roll 4 2 roll ArrowB curveto }
ifelse } def
/ClosedBezier { BezierNArray n 1 eq { pop pop } { moveto n 1 sub 3 idiv {
6 2 roll 4 2 roll curveto } repeat closepath } ifelse } def
/BezierShowPoints { gsave Points aload length 2 div cvi /n ED moveto n 1
sub { lineto } repeat CLW 2 div SLW [ 4 4 ] 0 setdash stroke grestore }
def
/Parab { /y0 exch def /x0 exch def /y1 exch def /x1 exch def /dx x0 x1
sub 3 div def /dy y0 y1 sub 3 div def x0 dx sub y0 dy add x1 y1 ArrowA
x0 dx add y0 dy add x0 2 mul x1 sub y1 ArrowB curveto /Points [ x1 y1 x0
y0 x0 2 mul x1 sub y1 ] def } def
/Grid { newpath /a 4 string def /b ED /c ED /n ED cvi dup 1 lt { pop 1 }
if /s ED s div dup 0 eq { pop 1 } if /dy ED s div dup 0 eq { pop 1 } if
/dx ED dy div round dy mul /y0 ED dx div round dx mul /x0 ED dy div
round cvi /y2 ED dx div round cvi /x2 ED dy div round cvi /y1 ED dx div
round cvi /x1 ED /h y2 y1 sub 0 gt { 1 } { -1 } ifelse def /w x2 x1 sub
0 gt { 1 } { -1 } ifelse def b 0 gt { /z1 b 4 div CLW 2 div add def
/Helvetica findfont b scalefont setfont /b b .95 mul CLW 2 div add def }
if systemdict /setstrokeadjust known { true setstrokeadjust /t { } def }
{ /t { transform 0.25 sub round 0.25 add exch 0.25 sub round 0.25 add
exch itransform } bind def } ifelse gsave n 0 gt { 1 setlinecap [ 0 dy n
div ] dy n div 2 div setdash } { 2 setlinecap } ifelse /i x1 def /f y1
dy mul n 0 gt { dy n div 2 div h mul sub } if def /g y2 dy mul n 0 gt {
dy n div 2 div h mul add } if def x2 x1 sub w mul 1 add dup 1000 gt {
pop 1000 } if { i dx mul dup y0 moveto b 0 gt { gsave c i a cvs dup
stringwidth pop /z2 ED w 0 gt {z1} {z1 z2 add neg} ifelse h 0 gt {b neg}
{z1} ifelse rmoveto show grestore } if dup t f moveto g t L stroke /i i
w add def } repeat grestore gsave n 0 gt
% DG/SR modification begin - Nov. 7, 1997 - Patch 1
%{ 1 setlinecap [ 0 dx n div ] dy n div 2 div setdash }
{ 1 setlinecap [ 0 dx n div ] dx n div 2 div setdash }
% DG/SR modification end
{ 2 setlinecap } ifelse /i y1 def /f x1 dx mul
n 0 gt { dx n div 2 div w mul sub } if def /g x2 dx mul n 0 gt { dx n
div 2 div w mul add } if def y2 y1 sub h mul 1 add dup 1000 gt { pop
1000 } if { newpath i dy mul dup x0 exch moveto b 0 gt { gsave c i a cvs
dup stringwidth pop /z2 ED w 0 gt {z1 z2 add neg} {z1} ifelse h 0 gt
{z1} {b neg} ifelse rmoveto show grestore } if dup f exch t moveto g
exch t L stroke /i i h add def } repeat grestore } def
/ArcArrow { /d ED /b ED /a ED gsave newpath 0 -1000 moveto clip newpath 0
1 0 0 b grestore c mul /e ED pop pop pop r a e d PtoC y add exch x add
exch r a PtoC y add exch x add exch b pop pop pop pop a e d CLW 8 div c
mul neg d } def
/Ellipse { /mtrx CM def T scale 0 0 1 5 3 roll arc mtrx setmatrix } def
/Rot { CP CP translate 3 -1 roll neg rotate NET  } def
/RotBegin { tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 }
def } if /TMatrix [ TMatrix CM ] cvx def /a ED a Rot /RAngle [ RAngle
dup a add ] cvx def } def
/RotEnd { /TMatrix [ TMatrix setmatrix ] cvx def /RAngle [ RAngle pop ]
cvx def } def
/PutCoor { gsave CP T CM STV exch exec moveto setmatrix CP grestore } def
/PutBegin { /TMatrix [ TMatrix CM ] cvx def CP 4 2 roll T moveto } def
/PutEnd { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
/Uput { /a ED add 2 div /h ED 2 div /w ED /s a sin def /c a cos def /b s
abs c abs 2 copy gt dup /q ED { pop } { exch pop } ifelse def /w1 c b
div w mul def /h1 s b div h mul def q { w1 abs w sub dup c mul abs } {
h1 abs h sub dup s mul abs } ifelse } def
/UUput { /z ED abs /y ED /x ED q { x s div c mul abs y gt } { x c div s
mul abs y gt } ifelse { x x mul y y mul sub z z mul add sqrt z add } { q
{ x s div } { x c div } ifelse abs } ifelse a PtoC h1 add exch w1 add
exch } def
/BeginOL { dup (all) eq exch TheOL eq or { IfVisible not { Visible
/IfVisible true def } if } { IfVisible { Invisible /IfVisible false def
} if } ifelse } def
/InitOL { /OLUnit [ 3000 3000 matrix defaultmatrix dtransform ] cvx def
/Visible { CP OLUnit idtransform T moveto } def /Invisible { CP OLUnit
neg exch neg exch idtransform T moveto } def /BOL { BeginOL } def
/IfVisible true def } def
end
% END pstricks.pro

%%EndProcSet
%%BeginProcSet: pst-dots.pro 0 0
%!PS-Adobe-2.0
%%Title: Dot Font for PSTricks
%%Creator: Timothy Van Zandt <tvz@Princeton.EDU>
%%Creation Date: May 7, 1993
%% Version 97 patch 1, 99/12/16
%% Modified by Etienne Riga <etienne.riga@skynet.be> - Dec. 16, 1999
%% to add /Diamond, /SolidDiamond and /BoldDiamond
10 dict dup begin
  /FontType 3 def
  /FontMatrix [ .001 0 0 .001 0 0 ] def
  /FontBBox [ 0 0 0 0 ] def
  /Encoding 256 array def
  0 1 255 { Encoding exch /.notdef put } for
  Encoding
    dup (b) 0 get /Bullet put
    dup (c) 0 get /Circle put
    dup (C) 0 get /BoldCircle put
    dup (u) 0 get /SolidTriangle put
    dup (t) 0 get /Triangle put
    dup (T) 0 get /BoldTriangle put
    dup (r) 0 get /SolidSquare put
    dup (s) 0 get /Square put
    dup (S) 0 get /BoldSquare put
    dup (q) 0 get /SolidPentagon put
    dup (p) 0 get /Pentagon put
    dup (P) 0 get /BoldPentagon put
% DG/SR modification begin - Dec. 16, 1999 - From Etienne Riga
    dup (l) 0 get /SolidDiamond put
    dup (d) 0 get /Diamond put
        (D) 0 get /BoldDiamond put
% DG/SR modification end
  /Metrics 13 dict def
  Metrics begin
    /Bullet        1000   def
    /Circle        1000   def
    /BoldCircle    1000   def
    /SolidTriangle 1344   def
    /Triangle      1344   def
    /BoldTriangle  1344   def
    /SolidSquare    886   def
    /Square         886   def
    /BoldSquare     886   def
    /SolidPentagon 1093.2 def
    /Pentagon      1093.2 def
    /BoldPentagon  1093.2 def
% DG/SR modification begin - Dec. 16, 1999 - From Etienne Riga
    /SolidDiamond  1008   def
    /Diamond       1008   def
    /BoldDiamond   1008   def
% DG/SR modification end
    /.notdef 0 def
  end
  /BBoxes 13 dict def
  BBoxes begin
    /Circle        { -550 -550 550 550 } def
    /BoldCircle    /Circle load def
    /Bullet        /Circle load def
    /Triangle      { -571.5 -330 571.5 660 } def
    /BoldTriangle  /Triangle load def
    /SolidTriangle /Triangle load def
    /Square        { -450 -450 450 450 } def
    /BoldSquare    /Square load def
    /SolidSquare   /Square load def
    /Pentagon      { -546.6 -465 546.6 574.7 } def
    /BoldPentagon  /Pentagon load def
    /SolidPentagon /Pentagon load def
% DG/SR modification begin - Dec. 16, 1999 - From Etienne Riga
    /Diamond       { -428.5 -742.5 428.5 742.5 } def
    /BoldDiamond   /Diamond load def
    /SolidDiamond  /Diamond load def
% DG/SR modification end
    /.notdef { 0 0 0 0 } def
  end
  /CharProcs 20 dict def
  CharProcs begin
    /Adjust {
      2 copy dtransform floor .5 add exch floor .5 add exch idtransform
      3 -1 roll div 3 1 roll exch div exch scale
    } def
    /CirclePath    { 0 0 500 0 360 arc closepath } def
    /Bullet        { 500 500 Adjust CirclePath fill } def
    /Circle        { 500 500 Adjust CirclePath .9 .9 scale CirclePath
                     eofill } def
    /BoldCircle    { 500 500 Adjust CirclePath .8 .8 scale CirclePath
                     eofill } def
    /BoldCircle    { CirclePath .8 .8 scale CirclePath eofill } def
    /TrianglePath  { 0  660 moveto -571.5 -330 lineto 571.5 -330 lineto
                     closepath } def
    /SolidTriangle { TrianglePath fill } def
    /Triangle      { TrianglePath .85 .85 scale TrianglePath eofill } def
    /BoldTriangle  { TrianglePath .7 .7 scale TrianglePath eofill } def
    /SquarePath    { -450 450 moveto 450 450 lineto 450 -450 lineto
                     -450 -450 lineto closepath } def
    /SolidSquare   { SquarePath fill } def
    /Square        { SquarePath .89 .89 scale SquarePath eofill } def
    /BoldSquare    { SquarePath .78 .78 scale SquarePath eofill } def
    /PentagonPath  {
      -337.8 -465   moveto
       337.8 -465   lineto
       546.6  177.6 lineto
         0    574.7 lineto
      -546.6  177.6 lineto
      closepath
    } def
    /SolidPentagon { PentagonPath fill } def
    /Pentagon      { PentagonPath .89 .89 scale PentagonPath eofill } def
    /BoldPentagon  { PentagonPath .78 .78 scale PentagonPath eofill } def
% DG/SR modification begin - Dec. 16, 1999 - From Etienne Riga
    /DiamondPath   { 0 742.5 moveto -428.5 0 lineto 0 -742.5 lineto
                     428.5 0 lineto closepath } def
    /SolidDiamond  { DiamondPath fill } def
    /Diamond       { DiamondPath .85 .85 scale DiamondPath eofill } def
    /BoldDiamond   { DiamondPath .7 .7 scale DiamondPath eofill } def
% DG/SR modification end
    /.notdef { } def
  end
  /BuildGlyph {
    exch
    begin
      Metrics 1 index get exec 0
      BBoxes 3 index get exec
      setcachedevice
      CharProcs begin load exec end
    end
  } def
  /BuildChar {
    1 index /Encoding get exch get
    1 index /BuildGlyph get exec
  } bind def
end
/PSTricksDotFont exch definefont pop
%END pst-dots.pro

%%EndProcSet
%%BeginProcSet: pst-node.pro 0 0
%!
% PostScript prologue for pst-node.tex.
% Version 97 patch 1, 97/05/09.
% For distribution, see pstricks.tex.
%
/tx@NodeDict 400 dict def tx@NodeDict begin
tx@Dict begin /T /translate load def end
/NewNode { gsave /next ED dict dup 3 1 roll def exch { dup 3 1 roll def }
if begin tx@Dict begin STV CP T exec end /NodeMtrx CM def next end
grestore } def
/InitPnode { /Y ED /X ED /NodePos { NodeSep Cos mul NodeSep Sin mul } def
} def
/InitCnode { /r ED /Y ED /X ED /NodePos { NodeSep r add dup Cos mul exch
Sin mul } def } def
/GetRnodePos { Cos 0 gt { /dx r NodeSep add def } { /dx l NodeSep sub def
} ifelse Sin 0 gt { /dy u NodeSep add def } { /dy d NodeSep sub def }
ifelse dx Sin mul abs dy Cos mul abs gt { dy Cos mul Sin div dy } { dx
dup Sin mul Cos Div } ifelse } def
/InitRnode { /Y ED /X ED X sub /r ED /l X neg def Y add neg /d ED Y sub
/u ED /NodePos { GetRnodePos } def } def
/DiaNodePos { w h mul w Sin mul abs h Cos mul abs add Div NodeSep add dup
Cos mul exch Sin mul } def
/TriNodePos { Sin s lt { d NodeSep sub dup Cos mul Sin Div exch } { w h
mul w Sin mul h Cos abs mul add Div NodeSep add dup Cos mul exch Sin mul
} ifelse } def
/InitTriNode { sub 2 div exch 2 div exch 2 copy T 2 copy 4 index index /d
ED pop pop pop pop -90 mul rotate /NodeMtrx CM def /X 0 def /Y 0 def d
sub abs neg /d ED d add /h ED 2 div h mul h d sub Div /w ED /s d w Atan
sin def /NodePos { TriNodePos } def } def
/OvalNodePos { /ww w NodeSep add def /hh h NodeSep add def Sin ww mul Cos
hh mul Atan dup cos ww mul exch sin hh mul } def
/GetCenter { begin X Y NodeMtrx transform CM itransform end } def
/XYPos { dup sin exch cos Do /Cos ED /Sin ED /Dist ED Cos 0 gt { Dist
Dist Sin mul Cos div } { Cos 0 lt { Dist neg Dist Sin mul Cos div neg }
{ 0 Dist Sin mul } ifelse } ifelse Do } def
/GetEdge { dup 0 eq { pop begin 1 0 NodeMtrx dtransform CM idtransform
exch atan sub dup sin /Sin ED cos /Cos ED /NodeSep ED NodePos NodeMtrx
dtransform CM idtransform end } { 1 eq {{exch}} {{}} ifelse /Do ED pop
XYPos } ifelse } def
/AddOffset { 1 index 0 eq { pop pop } { 2 copy 5 2 roll cos mul add 4 1
roll sin mul sub exch } ifelse } def
/GetEdgeA { NodeSepA AngleA NodeA NodeSepTypeA GetEdge OffsetA AngleA
AddOffset yA add /yA1 ED xA add /xA1 ED } def
/GetEdgeB { NodeSepB AngleB NodeB NodeSepTypeB GetEdge OffsetB AngleB
AddOffset yB add /yB1 ED xB add /xB1 ED } def
/GetArmA { ArmTypeA 0 eq { /xA2 ArmA AngleA cos mul xA1 add def /yA2 ArmA
AngleA sin mul yA1 add def } { ArmTypeA 1 eq {{exch}} {{}} ifelse /Do ED
ArmA AngleA XYPos OffsetA AngleA AddOffset yA add /yA2 ED xA add /xA2 ED
} ifelse } def
/GetArmB { ArmTypeB 0 eq { /xB2 ArmB AngleB cos mul xB1 add def /yB2 ArmB
AngleB sin mul yB1 add def } { ArmTypeB 1 eq {{exch}} {{}} ifelse /Do ED
ArmB AngleB XYPos OffsetB AngleB AddOffset yB add /yB2 ED xB add /xB2 ED
} ifelse } def
/InitNC { /b ED /a ED /NodeSepTypeB ED /NodeSepTypeA ED /NodeSepB ED
/NodeSepA ED /OffsetB ED /OffsetA ED tx@NodeDict a known tx@NodeDict b
known and dup { /NodeA a load def /NodeB b load def NodeA GetCenter /yA
ED /xA ED NodeB GetCenter /yB ED /xB ED } if } def
/LPutLine { 4 copy 3 -1 roll sub neg 3 1 roll sub Atan /NAngle ED 1 t sub
mul 3 1 roll 1 t sub mul 4 1 roll t mul add /Y ED t mul add /X ED } def
/LPutLines { mark LPutVar counttomark 2 div 1 sub /n ED t floor dup n gt
{ pop n 1 sub /t 1 def } { dup t sub neg /t ED } ifelse cvi 2 mul { pop
} repeat LPutLine cleartomark } def
/BezierMidpoint { /y3 ED /x3 ED /y2 ED /x2 ED /y1 ED /x1 ED /y0 ED /x0 ED
/t ED /cx x1 x0 sub 3 mul def /cy y1 y0 sub 3 mul def /bx x2 x1 sub 3
mul cx sub def /by y2 y1 sub 3 mul cy sub def /ax x3 x0 sub cx sub bx
sub def /ay y3 y0 sub cy sub by sub def ax t 3 exp mul bx t t mul mul
add cx t mul add x0 add ay t 3 exp mul by t t mul mul add cy t mul add
y0 add 3 ay t t mul mul mul 2 by t mul mul add cy add 3 ax t t mul mul
mul 2 bx t mul mul add cx add atan /NAngle ED /Y ED /X ED } def
/HPosBegin { yB yA ge { /t 1 t sub def } if /Y yB yA sub t mul yA add def
} def
/HPosEnd { /X Y yyA sub yyB yyA sub Div xxB xxA sub mul xxA add def
/NAngle yyB yyA sub xxB xxA sub Atan def } def
/HPutLine { HPosBegin /yyA ED /xxA ED /yyB ED /xxB ED HPosEnd  } def
/HPutLines { HPosBegin yB yA ge { /check { le } def } { /check { ge } def
} ifelse /xxA xA def /yyA yA def mark xB yB LPutVar { dup Y check { exit
} { /yyA ED /xxA ED } ifelse } loop /yyB ED /xxB ED cleartomark HPosEnd 
} def
/VPosBegin { xB xA lt { /t 1 t sub def } if /X xB xA sub t mul xA add def
} def
/VPosEnd { /Y X xxA sub xxB xxA sub Div yyB yyA sub mul yyA add def
/NAngle yyB yyA sub xxB xxA sub Atan def } def
/VPutLine { VPosBegin /yyA ED /xxA ED /yyB ED /xxB ED VPosEnd  } def
/VPutLines { VPosBegin xB xA ge { /check { le } def } { /check { ge } def
} ifelse /xxA xA def /yyA yA def mark xB yB LPutVar { 1 index X check {
exit } { /yyA ED /xxA ED } ifelse } loop /yyB ED /xxB ED cleartomark
VPosEnd  } def
/HPutCurve { gsave newpath /SaveLPutVar /LPutVar load def LPutVar 8 -2
roll moveto curveto flattenpath /LPutVar [ {} {} {} {} pathforall ] cvx
def grestore exec /LPutVar /SaveLPutVar load def } def
/NCCoor { /AngleA yB yA sub xB xA sub Atan def /AngleB AngleA 180 add def
GetEdgeA GetEdgeB /LPutVar [ xB1 yB1 xA1 yA1 ] cvx def /LPutPos {
LPutVar LPutLine } def /HPutPos { LPutVar HPutLine } def /VPutPos {
LPutVar VPutLine } def LPutVar } def
/NCLine { NCCoor tx@Dict begin ArrowA CP 4 2 roll ArrowB lineto pop pop
end } def
/NCLines { false NArray n 0 eq { NCLine } { 2 copy yA sub exch xA sub
Atan /AngleA ED n 2 mul dup index exch index yB sub exch xB sub Atan
/AngleB ED GetEdgeA GetEdgeB /LPutVar [ xB1 yB1 n 2 mul 4 add 4 roll xA1
yA1 ] cvx def mark LPutVar tx@Dict begin false Line end /LPutPos {
LPutLines } def /HPutPos { HPutLines } def /VPutPos { VPutLines } def }
ifelse } def
/NCCurve { GetEdgeA GetEdgeB xA1 xB1 sub yA1 yB1 sub Pyth 2 div dup 3 -1
roll mul /ArmA ED mul /ArmB ED /ArmTypeA 0 def /ArmTypeB 0 def GetArmA
GetArmB xA2 yA2 xA1 yA1 tx@Dict begin ArrowA end xB2 yB2 xB1 yB1 tx@Dict
begin ArrowB end curveto /LPutVar [ xA1 yA1 xA2 yA2 xB2 yB2 xB1 yB1 ]
cvx def /LPutPos { t LPutVar BezierMidpoint } def /HPutPos { { HPutLines
} HPutCurve } def /VPutPos { { VPutLines } HPutCurve } def } def
/NCAngles { GetEdgeA GetEdgeB GetArmA GetArmB /mtrx AngleA matrix rotate
def xA2 yA2 mtrx transform pop xB2 yB2 mtrx transform exch pop mtrx
itransform /y0 ED /x0 ED mark ArmB 0 ne { xB1 yB1 } if xB2 yB2 x0 y0 xA2
yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict begin false Line end /LPutVar [ xB1
yB1 xB2 yB2 x0 y0 xA2 yA2 xA1 yA1 ] cvx def /LPutPos { LPutLines } def
/HPutPos { HPutLines } def /VPutPos { VPutLines } def } def
/NCAngle { GetEdgeA GetEdgeB GetArmB /mtrx AngleA matrix rotate def xB2
yB2 mtrx itransform pop xA1 yA1 mtrx itransform exch pop mtrx transform
/y0 ED /x0 ED mark ArmB 0 ne { xB1 yB1 } if xB2 yB2 x0 y0 xA1 yA1
tx@Dict begin false Line end /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA1 yA1 ]
cvx def /LPutPos { LPutLines } def /HPutPos { HPutLines } def /VPutPos {
VPutLines } def } def
/NCBar { GetEdgeA GetEdgeB GetArmA GetArmB /mtrx AngleA matrix rotate def
xA2 yA2 mtrx itransform pop xB2 yB2 mtrx itransform pop sub dup 0 mtrx
transform 3 -1 roll 0 gt { /yB2 exch yB2 add def /xB2 exch xB2 add def }
{ /yA2 exch neg yA2 add def /xA2 exch neg xA2 add def } ifelse mark ArmB
0 ne { xB1 yB1 } if xB2 yB2 xA2 yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict
begin false Line end /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx
def /LPutPos { LPutLines } def /HPutPos { HPutLines } def /VPutPos {
VPutLines } def } def
/NCDiag { GetEdgeA GetEdgeB GetArmA GetArmB mark ArmB 0 ne { xB1 yB1 } if
xB2 yB2 xA2 yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict begin false Line end
/LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def /LPutPos {
LPutLines } def /HPutPos { HPutLines } def /VPutPos { VPutLines } def }
def
/NCDiagg { GetEdgeA GetArmA yB yA2 sub xB xA2 sub Atan 180 add /AngleB ED
GetEdgeB mark xB1 yB1 xA2 yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict begin
false Line end /LPutVar [ xB1 yB1 xA2 yA2 xA1 yA1 ] cvx def /LPutPos {
LPutLines } def /HPutPos { HPutLines } def /VPutPos { VPutLines } def }
def
/NCLoop { GetEdgeA GetEdgeB GetArmA GetArmB /mtrx AngleA matrix rotate
def xA2 yA2 mtrx transform loopsize add /yA3 ED /xA3 ED /xB3 xB2 yB2
mtrx transform pop def xB3 yA3 mtrx itransform /yB3 ED /xB3 ED xA3 yA3
mtrx itransform /yA3 ED /xA3 ED mark ArmB 0 ne { xB1 yB1 } if xB2 yB2
xB3 yB3 xA3 yA3 xA2 yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict begin false
Line end /LPutVar [ xB1 yB1 xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 xA1 yA1 ]
cvx def /LPutPos { LPutLines } def /HPutPos { HPutLines } def /VPutPos {
VPutLines } def } def
% DG/SR modification begin - May 9, 1997 - Patch 1
%/NCCircle { 0 0 NodesepA nodeA \tx@GetEdge pop xA sub 2 div dup 2 exp r
%r mul sub abs sqrt atan 2 mul /a ED r AngleA 90 add PtoC yA add exch xA add
%exch 2 copy /LPutVar [ 4 2 roll r AngleA ] cvx def /LPutPos { LPutVar t 360
%mul add dup 5 1 roll 90 sub \tx@PtoC 3 -1 roll add /Y ED add /X ED /NAngle ED
/NCCircle { NodeSepA 0 NodeA 0 GetEdge pop 2 div dup 2 exp r
r mul sub abs sqrt atan 2 mul /a ED r AngleA 90 add PtoC yA add exch xA add
exch 2 copy /LPutVar [ 4 2 roll r AngleA ] cvx def /LPutPos { LPutVar t 360
mul add dup 5 1 roll 90 sub PtoC 3 -1 roll add /Y ED add /X ED /NAngle ED
% DG/SR modification end
} def /HPutPos { LPutPos } def /VPutPos { LPutPos } def r AngleA 90 sub a add
AngleA 270 add a sub tx@Dict begin /angleB ED /angleA ED /r ED /c 57.2957 r
Div def /y ED /x ED } def
/NCBox { /d ED /h ED /AngleB yB yA sub xB xA sub Atan def /AngleA AngleB
180 add def GetEdgeA GetEdgeB /dx d AngleB sin mul def /dy d AngleB cos
mul neg def /hx h AngleB sin mul neg def /hy h AngleB cos mul def
/LPutVar [ xA1 hx add yA1 hy add xB1 hx add yB1 hy add xB1 dx add yB1 dy
add xA1 dx add yA1 dy add ] cvx def /LPutPos { LPutLines } def /HPutPos
{ xB yB xA yA LPutLine } def /VPutPos { HPutPos } def mark LPutVar
tx@Dict begin false Polygon end } def
/NCArcBox { /l ED neg /d ED /h ED /a ED /AngleA yB yA sub xB xA sub Atan
def /AngleB AngleA 180 add def /tA AngleA a sub 90 add def /tB tA a 2
mul add def /r xB xA sub tA cos tB cos sub Div dup 0 eq { pop 1 } if def
/x0 xA r tA cos mul add def /y0 yA r tA sin mul add def /c 57.2958 r div
def /AngleA AngleA a sub 180 add def /AngleB AngleB a add 180 add def
GetEdgeA GetEdgeB /AngleA tA 180 add yA yA1 sub xA xA1 sub Pyth c mul
sub def /AngleB tB 180 add yB yB1 sub xB xB1 sub Pyth c mul add def l 0
eq { x0 y0 r h add AngleA AngleB arc x0 y0 r d add AngleB AngleA arcn }
{ x0 y0 translate /tA AngleA l c mul add def /tB AngleB l c mul sub def
0 0 r h add tA tB arc r h add AngleB PtoC r d add AngleB PtoC 2 copy 6 2
roll l arcto 4 { pop } repeat r d add tB PtoC l arcto 4 { pop } repeat 0
0 r d add tB tA arcn r d add AngleA PtoC r h add AngleA PtoC 2 copy 6 2
roll l arcto 4 { pop } repeat r h add tA PtoC l arcto 4 { pop } repeat }
ifelse closepath /LPutVar [ x0 y0 r AngleA AngleB h d ] cvx def /LPutPos
{ LPutVar /d ED /h ED /AngleB ED /AngleA ED /r ED /y0 ED /x0 ED t 1 le {
r h add AngleA 1 t sub mul AngleB t mul add dup 90 add /NAngle ED PtoC }
{ t 2 lt { /NAngle AngleB 180 add def r 2 t sub h mul t 1 sub d mul add
add AngleB PtoC } { t 3 lt { r d add AngleB 3 t sub mul AngleA 2 t sub
mul add dup 90 sub /NAngle ED PtoC } { /NAngle AngleA 180 add def r 4 t
sub d mul t 3 sub h mul add add AngleA PtoC } ifelse } ifelse } ifelse
y0 add /Y ED x0 add /X ED } def /HPutPos { LPutPos } def /VPutPos {
LPutPos } def } def
/Tfan { /AngleA yB yA sub xB xA sub Atan def GetEdgeA w xA1 xB sub yA1 yB
sub Pyth Pyth w Div CLW 2 div mul 2 div dup AngleA sin mul yA1 add /yA1
ED AngleA cos mul xA1 add /xA1 ED /LPutVar [ xA1 yA1 m { xB w add yB xB
w sub yB } { xB yB w sub xB yB w add } ifelse xA1 yA1 ] cvx def /LPutPos
{ LPutLines } def /VPutPos@ { LPutVar flag { 8 4 roll pop pop pop pop }
{ pop pop pop pop 4 2 roll } ifelse } def /VPutPos { VPutPos@ VPutLine }
def /HPutPos { VPutPos@ HPutLine } def mark LPutVar tx@Dict begin
/ArrowA { moveto } def /ArrowB { } def false Line closepath end } def
/LPutCoor { NAngle tx@Dict begin /NAngle ED end gsave CM STV CP Y sub neg
exch X sub neg exch moveto setmatrix CP grestore } def
/LPut { tx@NodeDict /LPutPos known { LPutPos } { CP /Y ED /X ED /NAngle 0
def } ifelse LPutCoor  } def
/HPutAdjust { Sin Cos mul 0 eq { 0 } { d Cos mul Sin div flag not { neg }
if h Cos mul Sin div flag { neg } if 2 copy gt { pop } { exch pop }
ifelse } ifelse s add flag { r add neg } { l add } ifelse X add /X ED }
def
/VPutAdjust { Sin Cos mul 0 eq { 0 } { l Sin mul Cos div flag { neg } if
r Sin mul Cos div flag not { neg } if 2 copy gt { pop } { exch pop }
ifelse } ifelse s add flag { d add } { h add neg } ifelse Y add /Y ED }
def
end
% END pst-node.pro

%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/setpagedevice{pop}N/copypage{}N/p 3 def
@MacSetUp}N/doclip{psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll
newpath 4 copy 4 2 roll moveto 6 -1 roll S lineto S lineto S lineto
closepath clip newpath moveto}N/endTexFig{end psf$SavedState restore}N
/@beginspecial{SDict begin/SpecialSave save N gsave normalscale
currentpoint TR @SpecialDefaults count/ocount X/dcount countdictstack N}
N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs
neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale ang rotate
rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}ifelse
scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale llx neg
lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly lineto urx
ury lineto llx ury lineto closepath clip}if/showpage{}N/erasepage{}N
/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{count ocount sub{
pop}repeat countdictstack dcount sub{end}repeat grestore SpecialSave
restore end}N/@defspecial{SDict begin}N/@fedspecial{end}B/li{lineto}B
/rl{rlineto}B/rc{rcurveto}B/np{/SaveX currentpoint/SaveY X N 1
setlinecap newpath}N/st{stroke SaveX SaveY moveto}N/fil{fill SaveX SaveY
moveto}N/ellipse{/endangle X/startangle X/yrad X/xrad X/savematrix
matrix currentmatrix N TR xrad yrad scale 0 0 1 startangle endangle arc
savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro 0 0
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
%%BeginFont: CMR10
%!PS-AdobeFont-1.1: CMR10 1.00B
%%CreationDate: 1992 Feb 19 19:54:52
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.00B) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMR10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMR10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 49 /one put
dup 58 /colon put
dup 70 /F put
dup 97 /a put
dup 101 /e put
dup 103 /g put
dup 105 /i put
dup 110 /n put
dup 112 /p put
dup 114 /r put
dup 116 /t put
dup 117 /u put
readonly def
/FontBBox{-251 -250 1009 969}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5CF7158F1163BC1F3352E22A1452E73FECA8A4
87100FB1FFC4C8AF409B2067537220E605DA0852CA49839E1386AF9D7A1A455F
D1F017CE45884D76EF2CB9BC5821FD25365DDEA6E45F332B5F68A44AD8A530F0
92A36FAC8D27F9087AFEEA2096F839A2BC4B937F24E080EF7C0F9374A18D565C
295A05210DB96A23175AC59A9BD0147A310EF49C551A417E0A22703F94FF7B75
409A5D417DA6730A69E310FA6A4229FC7E4F620B0FC4C63C50E99E179EB51E4C
4BC45217722F1E8E40F1E1428E792EAFE05C5A50D38C52114DFCD24D54027CBF
2512DD116F0463DE4052A7AD53B641A27E81E481947884CE35661B49153FA19E
0A2A860C7B61558671303DE6AE06A80E4E450E17067676E6BBB42A9A24ACBC3E
B0CA7B7A3BFEA84FED39CCFB6D545BB2BCC49E5E16976407AB9D94556CD4F008
24EF579B6800B6DC3AAF840B3FC6822872368E3B4274DD06CA36AF8F6346C11B
43C772CC242F3B212C4BD7018D71A1A74C9A94ED0093A5FB6557F4E0751047AF
D72098ECA301B8AE68110F983796E581F106144951DF5B750432A230FDA3B575
5A38B5E7972AABC12306A01A99FCF8189D71B8DBF49550BAEA9CF1B97CBFC7CC
96498ECC938B1A1710B670657DE923A659DB8757147B140A48067328E7E3F9C3
7D1888B284904301450CE0BC15EEEA00E48CCD6388F3FC3BEFD8D9C400015B65
0F2F536D035626B1FF0A69D732C7A1836D635C30C06BED4327737029E5BA5830
B9E88A4024C3326AD2F34F47B54739B48825AD6699F7D117EA4C4AEC4440BF6D
AA0099DEFD326235965C63647921828BF269ECC87A2B1C8CAD6C78B6E561B007
97BE2BC7CA32B4534075F6491BE959D1F635463E71679E527F4F456F774B2AF8
FEF3D8C63B283796A9AD847424B4E6508546C36223A3B17EB82A56592F27FC27
F1D49D5FF4BBC0E16231807AF7E195AA7D0D01C7566243448B222D57B811EAE6
DE9370F84E207DC9BEC731AD6040FD9B804FA14CA264B73136F9AF34390319F6
A543D5D4D7FDDDF2F76651E557683614521110DEC1CCAC426117DDA7D6CF1B8B
7879B21FDC78BAB3C944BCDCD6A65B67F3692F0A8D5E36FB783A63D4FBC9842E
2CBC2720A7206F42A99AEC79FBBA92A27965AF40A71E05E4BA8D7FC58C828491
84A8EBDB90B1167333987F7D42A76E9C5C5A842EF91A19C55CCA6ADEB88B59E2
4FE4A96A8CFF51A1BEC1F1A6A1A5A5BFB54A1BE8C704194D72A79D33F099107F
153E3FFC70BED6D04DB4820FDAC002428C6741B91D8206296D827D3171351E85
39BB0DF1C2457E876D3A2E7E499D9D4104762FD19BA0526D38D2BF751EC56EB5
C80EE2A7AAF2CA12D1EB4548266CE8C0D2F93158A6728EB552FA09202865142F
E8D1300D637E64C338DCAE28398846CB3752FA92F87103C231C0D072E20D0E00
0DBE4A0656BE7F021DB863F63DE612622FCCA2C5462EA92B205DD2FB6D547ED3
D559010FF2C4113755D38F0B959DD34D98A0D0401AD3156A3B3D6FBE90EA40D6
F8B539EDCB0A1EFE2AAAEC6B56780F9312CE3CF757F815AD506873D2884BFED0
EEBBC826E2C4F589833F59AB6528318A5DC7648A46AFE9EAA17E79A2B07D1997
E6DC26B83665DB71ADF03DB565CB3278F5B3E256939A1A89D3EAFC42D3E73F7B
50AC3C522A97D2E5597D2052B5FADF47DDBDB7B94A76052FF4259FCEB7036AD8
ECA3DBBBDF75A8D3277ECE54D3817639BD8CC2449FF7DD7989AA03DB3E75DA4B
8ACC9F21237117AD4B234438CDCA4A7E25421A64637FCDF8273A02C5DFAF14A6
E9660AA8253D564A36E9602213916412182D115B9384E0CC88F56A4967A14B81
7F1475D9DB546D59C877321D70FBC7D0FCBF66133B2C709876647745E059C34E
AF3FFCBE556EDA2B7FE2292D003C9AF87D0A87D9C2A2B7BAFC58FE825BC54EA5
B184716D9B3136AC2E7C2B34D3560C6B2F9F322B345A00A015146C0189EF288E
2BD9E00BCEB65DC40CC591217AAB40D20975E4017237825DB5F7B38287124B1D
F043B0FCB637C73B4A0958CFC8D7FA54497CDD56B2F395289F39DAE502F05768
F14D503C231278716A56A3C62D8E7B6C3CE95E516F31D93FC8698370527B22ED
0DFD95D84364C2FBF12D0E44E65C529AB7CA3877A74A818A141E536CC0A5FC3F
FC08589505FDED35B0CB4F82FB2888F763263301085EC0ED9F3F1E8F47C334F2
636167CE2E18DF66708F78F42D831456C864517A13EE3105928236468DE25286
9BFA949441A0F47003C0A09FA86DCFE22FC2AFB75E23A46F8651E1A1E2DF46B4
4921BE25AFC5D9787E594B20AC084B34D3B91864301EDA2B10C008DF56B124B2
527DD83B8234D67D17AACA68CCF444D8FE96D803E3157AE5B0B8C9DB9FAF3C17
34227E09E4DE85711300C7EE944935BC9B0ACF95DB07EBDEFBD2E749611CC896
E26B3692498985ADC3CBDFF019FAF8D2DF2074CB4EC5AE6D2922EA95EDC7BA50
2A326978B88228C34FAD3789D42885D36DD6B6C1F34F870ECF398AA65846650E
0AFD457125558B3CFE305B1D5356133BAB4A5FFAAB80B30D7594DDB1E850A976
F46ECB04F6C4E7A15FB52D0910046A3842E0613AA75AD9528429AC02CE5D92A9
43C7E488D3F4DD4CDFC7608B2273DCD44F2AEA4465980F63F5D824CF6FE6F3F6
AC45BB864C1283419FE17ABB6B685D067D4E5AE1D4CE1E27A33CDAA0022F6B3D
A84B4ABBF85F8BF6F640B44560B35199253F21ACC315CD84D0406A0F1A456587
60A258ADE7EFF19B13B86D8DA6C848FDCCA65A9A775FC38D0B42371CA27F629B
2C28FB6A800B24C4EBA5B5D4AAA0EDB7013593A3DAB0D7BE5BDDA67381CAF1D2
C28AAADF2F974D38C215F6C5CFD29EE1FA54F78887D5AAD4E23D31482C9F8DC8
7297D71CE9FA1D20E3E81EA31404A5851822262546B053240886D2242FE88843
889A965C9C39B0564FEC15A58EBFBA4154640880C26EAFDF94F738AECC969DB9
BB569765F8CA2E3377316B91238E327C1CD011F4A102BAAFE23FAB0A5F8052D1
915C96B921CD03965499A3E3C35121B60D6AD5038AC5362FC2F311C83C3EE750
88127B866368F5B344C0F1BA61D69B414ACF6BB78595EABA41D4A80B857301EB
10E46B0877251B47563FDD7719071E6361922B03E40A20E6C116858D8B7FDDA6
4C9671659A33C0A5F4D5D3645A39E5BA41E484212DCC7D434050595B5239CD7B
E3BACC7C37A8232A77F770EAFBFA60284D0453841EF695E457B446CCF4E0EEC5
84CDCF02833FAB1E4B3F7BC45E823C7589D0B3371E6561D8D609D89E09A2C955
CFE4A1FF3E95286D06A9B5D77CB6E7A47A47B8035BDE1683F99C3358831A2D07
DFE27B068863D3064933C0F14845B67C464956325DF1C8D0908C98C378A9CBF6
D404466A5DCF9468B4EC8B5849C02DC87EF0343FF09AB2F4E7E8CFE42DD6FEDD
7E01EBFD091D8629A55081350B737F3907820CCD606946A3AF3D700FB018BD94
B6B38BBEBE2E4AC9B129507BCC5E5C9AA5595A012BE9404970A58E767F732523
50510EDC333B5979876524F6BDB3F065BE2C7D30762D338D50BE029905131DB7
CD397728DB2EFA880D5F47F38ED961486F806620B014AD04E7C9150F83D8568C
7A709D03EB37A3D4C6EF0F060F6D4131B300C52054E34DD3C811BC4C8EB9A506
723A23AC53C7A299715C4C123CBEAB41D0EE1B6C1F1EFFEE926D7708B7B53608
E5652C98EE949036C1CE9E989C1B387DFA514B7DE3A578DCBDD9E887F022FEB6
BEBABF9FBC8F560317BD8E3C7C420A6ED711CF3D13DB213829D0FACB7170E6BE
8ECAC265531F07FE3819FAF6D2A5F116497AE16CF3E8071CBF7AA5D8EE74B568
478C743F32B35885D06FB5F9823A142E5156EDF954EA543C4D2C674E0C94D076
959639CC0FEA8FD90CAF88E0AB3AA62D39DE46F0936AA6EC91E4F485D33E0540
01EE1D6BB1C9593FB76E61AA2DB192843A4AF0C76334BFAD23DF0F74B461760F
4C10556EE123ECF47905194ECFB813B91B80FF6EC8CE4496E74E924D95475D70
7646790CA635193A46A0270FC0A689DBEBAA9F076082FB276516EAAB277A15DB
914BC29648DAC2F3DB278B22F92CBDEF648E6700DCB4A506335AB4010BC8EDE0
06F2B895A86039DD12080D521B03B2364B158A7959DF073540D8B5BBCCA83C40
BD6B1599B825106188D5026DA7C92BAA90759DD0380AC0726FF9B8525421A3B8
D52C3E3F2F58AAC75030091B3766FBF348E76058F8120D4CF9CA8799DC152ADF
8ED20A90B9699E7050719F87DF77F50DB46E7A67093C86C1C7104FC36966392D
E4C41C8D8257038C25B5AD8ABCB0F134510A5C0FDB2999F21EF446DE40F16237
EBD1578704E897D51EB9AC5D8C8E02361743CEEBF2DE69109C23DAE8B7E09ACA
422B0304FE232775F5D9A307F7F75CADB4A4186460E6382305950EF611CCC202
51903E965CBFB1C7185004748BB4A2307949B3DD17766FEDFB323A776EE1693C
AD51636703E6A2CE940B9261C041773181145DB5E0918C2C91A0AF3F314C49DB
EB442DD13067257F53534CE2BFC6FAAFEE473A57F12665BB7DAB7BC51B87E18A
7547AF4FD04E3649F175072E60F010065E40C89EFA6A61631EB5F9A5884FA15E
0353D9D45A6832A339F8DD373EC1C0B9E8C7AA6DE737E9099F4F289B73B21CF4
5E3F5697EF0B5BA92C6DDED0F4A1A5B715CE34805BA52FE9B1EBA1558FBB3BA3
8D177701F88E545B98508A0220CC60AFAABD62D4485A2CCA662CF355690F9F8C
F252AE351E09BE2FE312ADB5FED6BC2E1736E3E28F382909CCA18658DF842BAD
5FBFACB68DF9CAD59E5AB4048D66E6318B13C6E96771F0
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMR5
%!PS-AdobeFont-1.1: CMR5 1.00B
%%CreationDate: 1992 Feb 19 19:55:02
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.00B) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMR5) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMR5 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 55 /seven put
dup 56 /eight put
dup 57 /nine put
dup 97 /a put
dup 98 /b put
dup 101 /e put
dup 110 /n put
dup 112 /p put
dup 114 /r put
dup 116 /t put
readonly def
/FontBBox{-341 -250 1304 965}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5CF7158F1163BC1F3352E22A1452E73FECA8A4
87100FB1FFC4C8AF409B2067537220E605DA0852CA49839E1386AF9D7A1A455F
D1F017CE45884D76EF2CB9BC5821FD25365DDEA1F9B0FF4CFF25B8E64D0747A3
7CAD14E0DBA3E3CA95F10F24B7D5D75451845F1FB7221D7794A860756CFBB3E7
704A52A22448C34812C3DBEDD41892577AABA7D555E9298C1A0F7DA638078167
F56E29672683C51CF1C003764A8E7AD9D8ADE77B4983F56FE2D12723AAD8BF36
682CFBB71B1D12210144D39DD841A971F71DB82AC6CD815987CDCF29ABC3CC96
5EEBD5D661F452C6E0C74F9ED8D0C5B3755551A172E0FE31EA02344176E32666
14B6853A1C303A5E818C2E455A6CF8FC9A66DC6E279101D61C523BD9DB8EB82F
EAF4D7FDF6372383C0794C4568D079648689A199D4B65BA646CF95B7647E4BEC
83856C27A8EF177B3A686EDA6354FE9573E123C12EC4BA56A7E8BFB8F9B75147
9DD79A743968F36F7D0D479FA610F0816E6267E5CE327686A5485AB72201525C
FB3B7CA10E1BF26E44C24E1696CB089CB0055BD692C89B237CF269F77A31DC81
0F4B75C8400ABCFDCEC6443CD0E81871CD71AA3064ABDE882C4C52322C27FA8B
41C689F827FB0F8AAF8022CF3C1F41C0B45601190C1328831857CBF9B1E7D1AA
246117E56D6B7938488055F4E63E2A1C8D57C17D213729C68349FEC2C3466F41
171E00413D39DF1F67BC15912F30775AFDF7FB3312587E20A68CF77AD3906040
842D63C45E19278622DD228C18ABDD024DD9613CDC0B109095DB0ADC3A3C0CB5
AB597D490189EA81239E39202CBC7A829EB9B313A8F962F7879D374ADF529BD0
5533EF977142F647AD2F5975BA7E340419116099B19ACCCC37C551276E88AB21
35B6AE2958E6B601DB59EC4AB08C772C4FC3FC2D2574D44B5FF740E69094ED18
BE913AF28901278CD88F1A8EB76A41407725E38A6DA90E4A9C3935DEE60260E3
7FE2D7B0D854C045521E6AAD8B4F42D95A0B2C54D98BF77966495969E0AE3FE3
D5B33E8B8AE155103097131D498CF86496AFB1A99C6F71AF67C634CE188605E5
BD4AFD4D2C384C835549BAA43FFDC8E690279C56C48DA3CB78D7FFF6458F4A46
4E754B01E538F600E8CBB8F0A6E0D854A5D0195B68C272299EECD85E455A8F27
B744FCFFFB405CE6874F4F2C4162AE52A9FEE5B1633D791ED10F5FD7BE1346E6
314DE031DC390CEDE2BC86D718C14CB07602424DBA97A8DF4D8C33CD61D98D67
1B34B4CD1B83500BAAF1E9AC4AE51D633D9BC96AA336F898D4B199CB55BD859B
577B0ED822C81C19D8663D06ECA3D8852635FF0E5B6121D9C084B61950E4BF82
2A9D0AA237C21D47CDB694CAE585EE26C8BF105750B3E925AC739DDCA74EDEA2
1499828FAFD246D733D321437B676327F71872503893F275044B6A9B94D146C6
30A743CBDAD5735F6AB23FE3612AC4AB5B7F7A214A4AA6357848ABFCE25AD20E
E13DDF6833D9FCC1F99160135AA1434AB6AD48039D6C2D5DB10DDA6EC33A3604
27D7CE0EA6CD4158368D6CD7B432D03CC8384FAB804590A95CF255FA0F7AD86F
22DA0591B1FB72EB68F8A5840946BD9E43DB61363DB1F2082E87B1382A42891D
D48D2A8CBAFA467E80834F58318BE18D63AD9EF236F5A97F86A8FA3E22350CB2
ADC4B6615AEC87F65828DEA78C3505983265B2A31B986CC9965132CC6E64F3FC
78910DDE116797A25C974EA42CFCDB7BBFA8A25684F1FB3A866D785CBB292D13
304F7FB01A6BFD664F84848749CDA80FE011827149A5025719CA46DC3857096B
4D4A27C8106B80AFD86C8A410C106D88EC16600824EDECDCC4514925E524EB35
D1417020041EE250D51F65B30679ED12885C3A4A771F2B1CC2DE31AFD153F74A
13501CDF3D80D4209D675D9FC42BAF30E83A52360CE716AA71099674FD651FA1
19E6A69DF6388DAF32D842F1659E9525C47EFBED5621EA5B52103EE9AF5FF1F0
A40B3958577E6DFE38DC60DEA8DF69E3A183AF6BBBC416AFE8380F4B6FA8073E
57D59E02A1D1A9D9D121CD0297433EB63C3A121910073B60392C6235EC5BE5F0
5C224F170FAA11A23D7B9BBA12E4AE6BA2BBA9F11304D9ADCF037DB673B9E7A9
247B7A2B17F0270C37A666A1D423B497080F65439183AA23C243A48D4E3EA0F6
3B3381EFC56A3D1EE79D7E70EE99EE253598C72532B76A64EDB1E709177957C0
AB184E0D2DB5CC10EFEE06F60F4C20BA0B0334BC4B8859972B0596A8F76DD72B
1B7F30891D90521E097A0E93A114197ADABB284C64E6665D8C4407F0442887E2
05FD506DACEA964F5F7F370344423B956533EDF0EBC243E7A9E71620293427F1
6E2B07F7B31A5E48C61B4AC869D011470B1CFF34D4E9B8913202829A20AAFA1D
25ED0756974EFA3709BCDC40A1B2F9E4BA41D3255A0B33093E1AF2AE9A1028C4
1F348E7633884895D35BFDAFB6469156A8A4D74D8FCA6C2F33843AFDD7B83765
20579C222EA015CD92E7B78D0BF7F77128D4467B38A73EFCB0398C2813893878
030B7CBB04C74FDA1DDABEC1BFDCACEF19CD34687CF91B8CA316535855D09EE4
92162167E33E4239C0626D3F6A0D41953CF0142F91144A83512FDCF5CDD6E411
45C189149CDD0F8F9193F96CB9D6C12EA7F6F808C75087F5A9ECCE6461F8D1EE
CFBE7711E59E0EAF2425E9BCEA9E9157D8A4C52215AC771A4444F1CF2BCC41F8
C9A25A86F26F912C14117709715E819CF33E71C6B56071929C04CF6154F1A0C5
A49AFDBA10F3389B9620EF1807CA4A29972CD0DCC490D8114E265D5CE3C0240D
77CEC5C147C5A50CD060CCA8410DFB17C0192A47684A0503066F4E671472E09A
B21CD69AF9FC50FB93AA54F16004454320E73D5FCCA69D559CB52D8A3DDB5F83
C955D771AA82A95A18A6E97943F39710064EA18B9188F28AF2A9F549F664755A
3AECBA3CFACF9F6065E657F3C15F6E043A1E14650061798BAB9FA2B52127F334
D2FD033793E5D273566C381AD271E3BC1CA9D7E63DB89E601D64D2DF34D53D5E
66922A217C944B4BD1214A7AD1E84582FCC82F8C3359885A9B8A848620F753CD
363B47EA8ED60BD07FC818455646B3BDAA6B66A85A3AA689F14F3BB933CF335F
9C5F1F04E4B6C9EC759E0EFC5B45D01EA5A309DE930EA0927E79FA697B35F19F
9C5DE11D12905F1386B9F6032AA1E52E3E5F131DDC7A40164898E0E2065DEF22
A21B79A80F27BD88919613D3FEE51F6D169977F82F429A655B3385B72EBBFCF7
E551E30F724EC202EB20D03933EDFB95D2A30C8EB1C8E0D6C365434EFACB4213
5000781CC64736E10AE31ED053ACF6844A84C96D05D63D9B8DBC182B355C5F4A
A6B032B27E40FFC9708E00343AB143CFD8927399B6D2EA95B8CAABC9C77D133D
31AE5683A235B2FA02B9DA3452FBE8B4E05CAAE74660443B64560899D4E255F3
902FEF21707B2E757B67D0A1DAAABD3D432A5BD630C4D4B73EBBE984EE8FEFCD
BD91F1BA697F936979295669888178DD65CB80661FE961BF2B1B016553808A2F
93C786991E1055C7D8EC085C5E0923CEFA7BE5EAD11679185A8B4322FABA2FD0
E7F135AF775903DB41B2CAC4EC75F0658DA693F6D9C845AECB87AB730D45B080
6F4AE110DFBCAD4C5235FA681C9A6F5FBC129E576AD4F139DCB3A014C5C7C0CD
EC47F642541E904D05B0C8169CA49A21F6AA9A46C325AA3B23265F0A2CA4B46D
A686C5C87F75763062DEC9763D8432B7A0CC26C44DD5B12996E4072D54B0AA0A
4347425D4A1583521A91C9C152130923003967D9AC4A6FFC621B413388F4A1F1
74DB7626096EFEBE5F99DD6DA8C70C0CCE0248739F55EFDDE3173E65B5EF0DFB
EA9C04F75ED840F3074ED0D08CE72F7A7123391C1DB3B1C0F0D9F54EFD835BCA
0B1D8BB20942569F5168A6ED866C8BFE99B2C5F7D508AFFC9A14939405F219C4
D7FCE92EA00112C17BB30551F5C75B3D665246D637A0477962EF457FED877E22
49ED4F53443C6F0C9FE7532EE3235CCB6DDD71872A99BDFDD662D55790BB8989
2CCD0861D444D4A6D4E548B4942DEFBA4A462675683EC3F6CFDE399CD723B0D1
BF22417272D4A515BEC2B64AAE50237D2526DD5A7240DE1BC736117E54880EDF
A17A1557BB052C07181C2A358F2F5D5D3AB3A880ED3D8F1B38DC77BF444EDC62
F47F9FCF22343CB0FEC2B653064B9607EA05A3A5BF44E1836642485387813F6D
5A20498894C190DDE43A92D0EFEED9206630295DF52B2AB748DAF23CF65DB7A7
77DDFE9D4F42CBEF9203446791B6A9ABC398E6F8A610CABF5E30A2F8488A3743
8EBA8BD78989CA6B9CFA815215E688A0C6DF8D86636238977B9D799E1710AABB
8FFB2248C3BFCCB94382230371B010B63DB0C16DAFB9A6DCC2E3C12D92A7F595
39FDAA7C0B85AE9E2DF9E10D8AEBA186D79FD79B02614CA72F035F67593E7DD7
8EA2D777C4B55663ABC3D054968C814C4C15C7E188240C0267F98FDEA3D26D23
7FBA21BCD49055B1E7807831C97694072A852097D40DACC2A64968F460C52DDE
DCFCCEBCE461B6B40C38115DA25ED90554AAF876507056190584B428183802E8
9B57427595DDA69671BC916A3D21A376117934320BE24A8103A74BD6F3FA4707
1D48990661D55396B406A2046A1CE25DAA213EE7A4A0D69AE645952E8752E5B5
309123F48151EE5335D213EFD12806A1F1818B713E66A0B8B16746DEC247E495
1215EDF13F1CB234E7B7FDD667151BD6461F00EBD491CBC10C41FF3E146C2951
E2D802B5364798E656CDB01442EE55A837CDFD5615A3523DBE2FDB50218E99F3
A99D7E1465772A846D262129CE8A7805B53DE1603F089A6A2FEB065AEF2FC463
E5EAD861CC5F129CA92073207AAADF1C86522A970AC08B5BA5565F22348606B2
4DF8E8E79B89C509BC15D455523EDF8F2727586D669E28FDCB9F7B501283A847
A733F6B668A767EE500AA7DA
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
TeXDict begin 39139632 55387786 1000 600 600 (phil.dvi)
@start /Fa 138[46 32 1[33 1[46 1[46 4[23 1[42 1[37 3[42
26[54 11[23 8[42 49[{}12 83.022 /CMR10 rf /Fb 139[22
1[22 1[31 1[31 8[25 2[31 28 39[28 28 28 28 28 28 28 28
28 28 48[{}17 41.511 /CMR5 rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
%%PaperSize: A4
 end
%%EndSetup
%%Page: 1 1
TeXDict begin 1 0 bop 0 TeXcolorgray Black 0 TeXcolorgray
515 1863 a
 tx@Dict begin tx@NodeDict begin {3.22221 0.97221 28.88928 14.44464
1.50693 } false /N@T-0 16 {InitRnode } NewNode end end
 515 1863 a Fb(pattern11)978 548 y
 tx@Dict begin tx@NodeDict begin {3.22221 0.0 3.40283 1.70142 1.50693
} false /N@T-0-0 16 {InitRnode } NewNode end end
 978 548
a Fb(5)992 535 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0 /N@T-0-0 InitNC { NCLine  } if end gsave 0.8 SLW 0 
setgray 0 setlinecap stroke  grestore  grestore end
 992 535 a 1321 548 a
 tx@Dict begin tx@NodeDict begin {3.22221 0.0 6.80566 3.40283 1.50693
} false /N@T-0-0-0 16 {InitRnode } NewNode end end
 1321 548 a Fb(16)1350
535 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-0 /N@T-0-0-0 InitNC { NCLine  } if end gsave 0.8 SLW
0  setgray 0 setlinecap stroke  grestore  grestore end
 1350 535 a 1679 548 a
 tx@Dict begin tx@NodeDict begin {3.22221 0.0 6.80566 3.40283 1.50693
} false /N@T-0-0-0-0 16 {InitRnode } NewNode end end
 1679 548 a Fb(26)1707 535
y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-0-0 /N@T-0-0-0-0 InitNC { NCLine  } if end gsave 0.8
SLW 0  setgray 0 setlinecap stroke  grestore  grestore end
 1707 535 a 978 616 a
 tx@Dict begin tx@NodeDict begin {3.22221 0.0 3.40283 1.70142 1.50693
} false /N@T-0-1 16 {InitRnode } NewNode end end
 978 616 a Fb(5)992 603 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0 /N@T-0-1 InitNC { NCLine  } if end gsave 0.8 SLW 0 
setgray 0 setlinecap stroke  grestore  grestore end
 992 603
a 1321 616 a
 tx@Dict begin tx@NodeDict begin {3.22221 0.0 6.80566 3.40283 1.50693
} false /N@T-0-1-0 16 {InitRnode } NewNode end end
 1321 616 a Fb(16)1350 603 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-1 /N@T-0-1-0 InitNC { NCLine  } if end gsave 0.8 SLW
0  setgray 0 setlinecap stroke  grestore  grestore end
 1350 603 a 1679
616 a
 tx@Dict begin tx@NodeDict begin {3.22221 0.0 6.80566 3.40283 1.50693
} false /N@T-0-1-0-0 16 {InitRnode } NewNode end end
 1679 616 a Fb(26)1707 603 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-1-0 /N@T-0-1-0-0 InitNC { NCLine  } if end gsave 0.8
SLW 0  setgray 0 setlinecap stroke  grestore  grestore end
 1707 603 a 964 684
a
 tx@Dict begin tx@NodeDict begin {3.22221 0.0 6.80566 3.40283 1.50693
} false /N@T-0-2 16 {InitRnode } NewNode end end
 964 684 a Fb(14)992 672 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0 /N@T-0-2 InitNC { NCLine  } if end gsave 0.8 SLW 0 
setgray 0 setlinecap stroke  grestore  grestore end
 992 672 a 1321 685 a
 tx@Dict begin tx@NodeDict begin {3.22221 0.0 6.80566 3.40283 1.50693
} false /N@T-0-2-0 16 {InitRnode } NewNode end end
 1321
685 a Fb(24)1350 672 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-2 /N@T-0-2-0 InitNC { NCLine  } if end gsave 0.8 SLW
0  setgray 0 setlinecap stroke  grestore  grestore end
 1350 672 a 1679 685 a
 tx@Dict begin tx@NodeDict begin {3.22221 0.0 6.80566 3.40283 1.50693
} false /N@T-0-2-0-0 16 {InitRnode } NewNode end end
 1679 685
a Fb(31)1707 672 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-2-0 /N@T-0-2-0-0 InitNC { NCLine  } if end gsave 0.8
SLW 0  setgray 0 setlinecap stroke  grestore  grestore end
 1707 672 a 978 754 a
 tx@Dict begin tx@NodeDict begin {3.22221 0.0 3.40283 1.70142 1.50693
} false /N@T-0-3 16 {InitRnode } NewNode end end
 978 754 a Fb(4)992
742 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0 /N@T-0-3 InitNC { NCLine  } if end gsave 0.8 SLW 0 
setgray 0 setlinecap stroke  grestore  grestore end
 992 742 a 1321 755 a
 tx@Dict begin tx@NodeDict begin {3.22221 0.0 6.80566 3.40283 1.50693
} false /N@T-0-3-0 16 {InitRnode } NewNode end end
 1321 755 a Fb(15)1350 742
y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-3 /N@T-0-3-0 InitNC { NCLine  } if end gsave 0.8 SLW
0  setgray 0 setlinecap stroke  grestore  grestore end
 1350 742 a 1649 755 a
 tx@Dict begin tx@NodeDict begin {3.47221 0.0 13.95856 6.97928 1.50693
} false /N@T-0-3-0-0 16 {InitRnode } NewNode end end
 1649 755 a Fb(25ab)1707 742 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-3-0 /N@T-0-3-0-0 InitNC { NCLine  } if end gsave 0.8
SLW 0  setgray 0 setlinecap stroke  grestore  grestore end

1707 742 a 964 823 a
 tx@Dict begin tx@NodeDict begin {3.22221 0.0 6.80566 3.40283 1.50693
} false /N@T-0-4 16 {InitRnode } NewNode end end
 964 823 a Fb(16)992 810 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0 /N@T-0-4 InitNC { NCLine  } if end gsave 0.8 SLW 0 
setgray 0 setlinecap stroke  grestore  grestore end
 992 810
a 1321 823 a
 tx@Dict begin tx@NodeDict begin {3.22221 0.0 6.80566 3.40283 1.50693
} false /N@T-0-4-0 16 {InitRnode } NewNode end end
 1321 823 a Fb(26)1350 810 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-4 /N@T-0-4-0 InitNC { NCLine  } if end gsave 0.8 SLW
0  setgray 0 setlinecap stroke  grestore  grestore end
 1350 810 a 964
891 a
 tx@Dict begin tx@NodeDict begin {3.22221 0.0 6.80566 3.40283 1.50693
} false /N@T-0-5 16 {InitRnode } NewNode end end
 964 891 a Fb(17)992 878 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0 /N@T-0-5 InitNC { NCLine  } if end gsave 0.8 SLW 0 
setgray 0 setlinecap stroke  grestore  grestore end
 992 878 a 1321 891 a
 tx@Dict begin tx@NodeDict begin {3.22221 0.0 6.80566 3.40283 1.50693
} false /N@T-0-5-0 16 {InitRnode } NewNode end end

1321 891 a Fb(27)1350 878 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-5 /N@T-0-5-0 InitNC { NCLine  } if end gsave 0.8 SLW
0  setgray 0 setlinecap stroke  grestore  grestore end
 1350 878 a 1679 891 a
 tx@Dict begin tx@NodeDict begin {3.22221 0.0 6.80566 3.40283 1.50693
} false /N@T-0-5-0-0 16 {InitRnode } NewNode end end
 1679
891 a Fb(33)1707 878 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-5-0 /N@T-0-5-0-0 InitNC { NCLine  } if end gsave 0.8
SLW 0  setgray 0 setlinecap stroke  grestore  grestore end
 1707 878 a 978 959 a
 tx@Dict begin tx@NodeDict begin {3.22221 0.0 3.40283 1.70142 1.50693
} false /N@T-0-6 16 {InitRnode } NewNode end end
 978 959 a
Fb(7)992 535 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0 /N@T-0-6 InitNC { NCLine  } if end gsave 0.8 SLW 0 
setgray 0 setlinecap stroke  grestore  grestore end
 992 535 a 964 1027 a
 tx@Dict begin tx@NodeDict begin {3.22221 0.0 6.80566 3.40283 1.50693
} false /N@T-0-7 16 {InitRnode } NewNode end end
 964 1027 a Fb(19)992
1015 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0 /N@T-0-7 InitNC { NCLine  } if end gsave 0.8 SLW 0 
setgray 0 setlinecap stroke  grestore  grestore end
 992 1015 a 1321 1028 a
 tx@Dict begin tx@NodeDict begin {3.22221 0.0 6.80566 3.40283 1.50693
} false /N@T-0-7-0 16 {InitRnode } NewNode end end
 1321 1028 a Fb(28)1350
1015 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-7 /N@T-0-7-0 InitNC { NCLine  } if end gsave 0.8 SLW
0  setgray 0 setlinecap stroke  grestore  grestore end
 1350 1015 a 1679 1028 a
 tx@Dict begin tx@NodeDict begin {3.22221 0.0 6.80566 3.40283 1.50693
} false /N@T-0-7-0-0 16 {InitRnode } NewNode end end
 1679 1028 a Fb(34)1707
1015 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-7-0 /N@T-0-7-0-0 InitNC { NCLine  } if end gsave 0.8
SLW 0  setgray 0 setlinecap stroke  grestore  grestore end
 1707 1015 a 978 1096 a
 tx@Dict begin tx@NodeDict begin {3.22221 0.0 3.40283 1.70142 1.50693
} false /N@T-0-8 16 {InitRnode } NewNode end end
 978 1096 a Fb(6)992 535
y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0 /N@T-0-8 InitNC { NCLine  } if end gsave 0.8 SLW 0 
setgray 0 setlinecap stroke  grestore  grestore end
 992 535 a 964 1164 a
 tx@Dict begin tx@NodeDict begin {3.22221 0.0 6.80566 3.40283 1.50693
} false /N@T-0-9 16 {InitRnode } NewNode end end
 964 1164 a Fb(16)992 1151 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0 /N@T-0-9 InitNC { NCLine  } if end gsave 0.8 SLW 0 
setgray 0 setlinecap stroke  grestore  grestore end
 992
1151 a 1321 1164 a
 tx@Dict begin tx@NodeDict begin {3.22221 0.0 6.80566 3.40283 1.50693
} false /N@T-0-9-0 16 {InitRnode } NewNode end end
 1321 1164 a Fb(26)1350 1151 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-9 /N@T-0-9-0 InitNC { NCLine  } if end gsave 0.8 SLW
0  setgray 0 setlinecap stroke  grestore  grestore end
 1350
1151 a 964 1232 a
 tx@Dict begin tx@NodeDict begin {3.22221 0.0 6.80566 3.40283 1.50693
} false /N@T-0-10 16 {InitRnode } NewNode end end
 964 1232 a Fb(16)992 1220 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0 /N@T-0-10 InitNC { NCLine  } if end gsave 0.8 SLW 0
 setgray 0 setlinecap stroke  grestore  grestore end
 992 1220
a 1321 1233 a
 tx@Dict begin tx@NodeDict begin {3.22221 0.0 6.80566 3.40283 1.50693
} false /N@T-0-10-0 16 {InitRnode } NewNode end end
 1321 1233 a Fb(26)1350 1220 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-10 /N@T-0-10-0 InitNC { NCLine  } if end gsave 0.8 SLW
0  setgray 0 setlinecap stroke  grestore  grestore end
 1350 1220
a 964 1301 a
 tx@Dict begin tx@NodeDict begin {3.22221 0.0 6.80566 3.40283 1.50693
} false /N@T-0-11 16 {InitRnode } NewNode end end
 964 1301 a Fb(16)992 1288 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0 /N@T-0-11 InitNC { NCLine  } if end gsave 0.8 SLW 0
 setgray 0 setlinecap stroke  grestore  grestore end
 992 1288 a 1321
1301 a
 tx@Dict begin tx@NodeDict begin {3.22221 0.0 6.80566 3.40283 1.50693
} false /N@T-0-11-0 16 {InitRnode } NewNode end end
 1321 1301 a Fb(26)1350 1288 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-11 /N@T-0-11-0 InitNC { NCLine  } if end gsave 0.8 SLW
0  setgray 0 setlinecap stroke  grestore  grestore end
 1350 1288 a 964
1635 a
 tx@Dict begin tx@NodeDict begin {3.22221 0.0 6.80566 3.40283 1.50693
} false /N@T-0-12 16 {InitRnode } NewNode end end
 964 1635 a Fb(20)992 1623 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0 /N@T-0-12 InitNC { NCLine  } if end gsave 0.8 SLW 0
 setgray 0 setlinecap stroke  grestore  grestore end
 992 1623 a 1321 1369
a
 tx@Dict begin tx@NodeDict begin {3.22221 0.0 6.80566 3.40283 1.50693
} false /N@T-0-12-0 16 {InitRnode } NewNode end end
 1321 1369 a Fb(14)1350 1356 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-12 /N@T-0-12-0 InitNC { NCLine  } if end gsave 0.8 SLW
0  setgray 0 setlinecap stroke  grestore  grestore end
 1350 1356 a 1679 1369
a
 tx@Dict begin tx@NodeDict begin {3.22221 0.0 6.80566 3.40283 1.50693
} false /N@T-0-12-0-0 16 {InitRnode } NewNode end end
 1679 1369 a Fb(24)1707 1356 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-12-0 /N@T-0-12-0-0 InitNC { NCLine  } if end gsave 0.8
SLW 0  setgray 0 setlinecap stroke  grestore  grestore end
 1707 1356 a 2036 1369
a
 tx@Dict begin tx@NodeDict begin {3.22221 0.0 6.80566 3.40283 1.50693
} false /N@T-0-12-0-0-0 16 {InitRnode } NewNode end end
 2036 1369 a Fb(31)2064 1356 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-12-0-0 /N@T-0-12-0-0-0 InitNC { NCLine  } if end gsave
0.8 SLW 0  setgray 0 setlinecap stroke  grestore  grestore end
 2064 1356 a 1321 1473
a
 tx@Dict begin tx@NodeDict begin {3.22221 0.0 6.80566 3.40283 1.50693
} false /N@T-0-12-1 16 {InitRnode } NewNode end end
 1321 1473 a Fb(22)1350 1461 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-12 /N@T-0-12-1 InitNC { NCLine  } if end gsave 0.8 SLW
0  setgray 0 setlinecap stroke  grestore  grestore end
 1350 1461 a 1649 1439
a
 tx@Dict begin tx@NodeDict begin {3.47221 0.0 13.95856 6.97928 1.50693
} false /N@T-0-12-1-0 16 {InitRnode } NewNode end end
 1649 1439 a Fb(25ab)1707 1427 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-12-1 /N@T-0-12-1-0 InitNC { NCLine  } if end gsave 0.8
SLW 0  setgray 0 setlinecap stroke  grestore  grestore end
 1707 1427 a 1679 1507
a
 tx@Dict begin tx@NodeDict begin {3.22221 0.0 6.80566 3.40283 1.50693
} false /N@T-0-12-1-1 16 {InitRnode } NewNode end end
 1679 1507 a Fb(21)1707 1495 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-12-1 /N@T-0-12-1-1 InitNC { NCLine  } if end gsave 0.8
SLW 0  setgray 0 setlinecap stroke  grestore  grestore end
 1707 1495 a 2036 1508
a
 tx@Dict begin tx@NodeDict begin {3.22221 0.0 6.80566 3.40283 1.50693
} false /N@T-0-12-1-1-0 16 {InitRnode } NewNode end end
 2036 1508 a Fb(30)2064 1495 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-12-1-1 /N@T-0-12-1-1-0 InitNC { NCLine  } if end gsave
0.8 SLW 0  setgray 0 setlinecap stroke  grestore  grestore end
 2064 1495 a 2364 1508
a
 tx@Dict begin tx@NodeDict begin {3.47221 0.0 13.95856 6.97928 1.50693
} false /N@T-0-12-1-1-0-0 16 {InitRnode } NewNode end end
 2364 1508 a Fb(25ab)2422 1495 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-12-1-1-0 /N@T-0-12-1-1-0-0 InitNC { NCLine  } if end
gsave 0.8 SLW 0  setgray 0 setlinecap stroke  grestore  grestore end
 2422 1495 a 1321 1542
a
 tx@Dict begin tx@NodeDict begin {3.22221 0.0 6.80566 3.40283 1.50693
} false /N@T-0-12-2 16 {InitRnode } NewNode end end
 1321 1542 a Fb(23)1350 1356 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-12 /N@T-0-12-2 InitNC { NCLine  } if end gsave 0.8 SLW
0  setgray 0 setlinecap stroke  grestore  grestore end
 1350 1356 a 1322 1610
a
 tx@Dict begin tx@NodeDict begin {3.22221 0.0 6.80566 3.40283 1.50693
} false /N@T-0-12-3 16 {InitRnode } NewNode end end
 1322 1610 a Fb(14)1350 1597 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-12 /N@T-0-12-3 InitNC { NCLine  } if end gsave 0.8 SLW
0  setgray 0 setlinecap stroke  grestore  grestore end
 1350 1597 a 1679 1610
a
 tx@Dict begin tx@NodeDict begin {3.22221 0.0 6.80566 3.40283 1.50693
} false /N@T-0-12-3-0 16 {InitRnode } NewNode end end
 1679 1610 a Fb(24)1707 1597 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-12-3 /N@T-0-12-3-0 InitNC { NCLine  } if end gsave 0.8
SLW 0  setgray 0 setlinecap stroke  grestore  grestore end
 1707 1597 a 2036 1610
a
 tx@Dict begin tx@NodeDict begin {3.22221 0.0 6.80566 3.40283 1.50693
} false /N@T-0-12-3-0-0 16 {InitRnode } NewNode end end
 2036 1610 a Fb(31)2064 1597 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-12-3-0 /N@T-0-12-3-0-0 InitNC { NCLine  } if end gsave
0.8 SLW 0  setgray 0 setlinecap stroke  grestore  grestore end
 2064 1597 a 1322 1901
a
 tx@Dict begin tx@NodeDict begin {3.22221 0.0 6.80566 3.40283 1.50693
} false /N@T-0-12-4 16 {InitRnode } NewNode end end
 1322 1901 a Fb(29)1350 1889 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-12 /N@T-0-12-4 InitNC { NCLine  } if end gsave 0.8 SLW
0  setgray 0 setlinecap stroke  grestore  grestore end
 1350 1889 a 1679 1678
a
 tx@Dict begin tx@NodeDict begin {3.22221 0.0 6.80566 3.40283 1.50693
} false /N@T-0-12-4-0 16 {InitRnode } NewNode end end
 1679 1678 a Fb(24)1707 1666 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-12-4 /N@T-0-12-4-0 InitNC { NCLine  } if end gsave 0.8
SLW 0  setgray 0 setlinecap stroke  grestore  grestore end
 1707 1666 a 2036 1679
a
 tx@Dict begin tx@NodeDict begin {3.22221 0.0 6.80566 3.40283 1.50693
} false /N@T-0-12-4-0-0 16 {InitRnode } NewNode end end
 2036 1679 a Fb(31)2064 1666 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-12-4-0 /N@T-0-12-4-0-0 InitNC { NCLine  } if end gsave
0.8 SLW 0  setgray 0 setlinecap stroke  grestore  grestore end
 2064 1666 a 1679 1782
a
 tx@Dict begin tx@NodeDict begin {3.22221 0.0 6.80566 3.40283 1.50693
} false /N@T-0-12-4-1 16 {InitRnode } NewNode end end
 1679 1782 a Fb(22)1707 1770 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-12-4 /N@T-0-12-4-1 InitNC { NCLine  } if end gsave 0.8
SLW 0  setgray 0 setlinecap stroke  grestore  grestore end
 1707 1770 a 2007 1748
a
 tx@Dict begin tx@NodeDict begin {3.47221 0.0 13.95856 6.97928 1.50693
} false /N@T-0-12-4-1-0 16 {InitRnode } NewNode end end
 2007 1748 a Fb(25ab)2064 1736 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-12-4-1 /N@T-0-12-4-1-0 InitNC { NCLine  } if end gsave
0.8 SLW 0  setgray 0 setlinecap stroke  grestore  grestore end
 2064 1736 a 2036 1817
a
 tx@Dict begin tx@NodeDict begin {3.22221 0.0 6.80566 3.40283 1.50693
} false /N@T-0-12-4-1-1 16 {InitRnode } NewNode end end
 2036 1817 a Fb(21)2064 1804 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-12-4-1 /N@T-0-12-4-1-1 InitNC { NCLine  } if end gsave
0.8 SLW 0  setgray 0 setlinecap stroke  grestore  grestore end
 2064 1804 a 2394 1817
a
 tx@Dict begin tx@NodeDict begin {3.22221 0.0 6.80566 3.40283 1.50693
} false /N@T-0-12-4-1-1-0 16 {InitRnode } NewNode end end
 2394 1817 a Fb(30)2422 1804 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-12-4-1-1 /N@T-0-12-4-1-1-0 InitNC { NCLine  } if end
gsave 0.8 SLW 0  setgray 0 setlinecap stroke  grestore  grestore end
 2422 1804 a 2721 1817
a
 tx@Dict begin tx@NodeDict begin {3.47221 0.0 13.95856 6.97928 1.50693
} false /N@T-0-12-4-1-1-0-0 16 {InitRnode } NewNode end end
 2721 1817 a Fb(25ab)2779 1804 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-12-4-1-1-0 /N@T-0-12-4-1-1-0-0 InitNC { NCLine  } if
end gsave 0.8 SLW 0  setgray 0 setlinecap stroke  grestore  grestore
end
 2779 1804 a 1679 1851
a
 tx@Dict begin tx@NodeDict begin {3.22221 0.0 6.80566 3.40283 1.50693
} false /N@T-0-12-4-2 16 {InitRnode } NewNode end end
 1679 1851 a Fb(23)1707 1666 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-12-4 /N@T-0-12-4-2 InitNC { NCLine  } if end gsave 0.8
SLW 0  setgray 0 setlinecap stroke  grestore  grestore end
 1707 1666 a 1679 1919
a
 tx@Dict begin tx@NodeDict begin {3.22221 0.0 6.80566 3.40283 1.50693
} false /N@T-0-12-4-3 16 {InitRnode } NewNode end end
 1679 1919 a Fb(24)1707 1907 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-12-4 /N@T-0-12-4-3 InitNC { NCLine  } if end gsave 0.8
SLW 0  setgray 0 setlinecap stroke  grestore  grestore end
 1707 1907 a 2036 1920
a
 tx@Dict begin tx@NodeDict begin {3.22221 0.0 6.80566 3.40283 1.50693
} false /N@T-0-12-4-3-0 16 {InitRnode } NewNode end end
 2036 1920 a Fb(31)2064 1907 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-12-4-3 /N@T-0-12-4-3-0 InitNC { NCLine  } if end gsave
0.8 SLW 0  setgray 0 setlinecap stroke  grestore  grestore end
 2064 1907 a 1679 2125
a
 tx@Dict begin tx@NodeDict begin {3.22221 0.0 6.80566 3.40283 1.50693
} false /N@T-0-12-4-4 16 {InitRnode } NewNode end end
 1679 2125 a Fb(36)1707 2112 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-12-4 /N@T-0-12-4-4 InitNC { NCLine  } if end gsave 0.8
SLW 0  setgray 0 setlinecap stroke  grestore  grestore end
 1707 2112 a 2036 1987
a
 tx@Dict begin tx@NodeDict begin {3.22221 0.0 6.80566 3.40283 1.50693
} false /N@T-0-12-4-4-0 16 {InitRnode } NewNode end end
 2036 1987 a Fb(31)2064 1975 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-12-4-4 /N@T-0-12-4-4-0 InitNC { NCLine  } if end gsave
0.8 SLW 0  setgray 0 setlinecap stroke  grestore  grestore end
 2064 1975 a 2036 2056
a
 tx@Dict begin tx@NodeDict begin {3.22221 0.0 6.80566 3.40283 1.50693
} false /N@T-0-12-4-4-1 16 {InitRnode } NewNode end end
 2036 2056 a Fb(22)2064 2043 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-12-4-4 /N@T-0-12-4-4-1 InitNC { NCLine  } if end gsave
0.8 SLW 0  setgray 0 setlinecap stroke  grestore  grestore end
 2064 2043 a 2364 2021
a
 tx@Dict begin tx@NodeDict begin {3.47221 0.0 13.95856 6.97928 1.50693
} false /N@T-0-12-4-4-1-0 16 {InitRnode } NewNode end end
 2364 2021 a Fb(25ab)2422 2009 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-12-4-4-1 /N@T-0-12-4-4-1-0 InitNC { NCLine  } if end
gsave 0.8 SLW 0  setgray 0 setlinecap stroke  grestore  grestore end
 2422 2009 a 2394 2090
a
 tx@Dict begin tx@NodeDict begin {3.22221 0.0 6.80566 3.40283 1.50693
} false /N@T-0-12-4-4-1-1 16 {InitRnode } NewNode end end
 2394 2090 a Fb(21)2422 2077 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-12-4-4-1 /N@T-0-12-4-4-1-1 InitNC { NCLine  } if end
gsave 0.8 SLW 0  setgray 0 setlinecap stroke  grestore  grestore end
 2422 2077 a 2751 2090
a
 tx@Dict begin tx@NodeDict begin {3.22221 0.0 6.80566 3.40283 1.50693
} false /N@T-0-12-4-4-1-1-0 16 {InitRnode } NewNode end end
 2751 2090 a Fb(30)2779 2077 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-12-4-4-1-1 /N@T-0-12-4-4-1-1-0 InitNC { NCLine  } if
end gsave 0.8 SLW 0  setgray 0 setlinecap stroke  grestore  grestore
end
 2779 2077 a 3079 2090
a
 tx@Dict begin tx@NodeDict begin {3.47221 0.0 13.95856 6.97928 1.50693
} false /N@T-0-12-4-4-1-1-0-0 16 {InitRnode } NewNode end end
 3079 2090 a Fb(25ab)3137 2077 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-12-4-4-1-1-0 /N@T-0-12-4-4-1-1-0-0 InitNC { NCLine 
} if end gsave 0.8 SLW 0  setgray 0 setlinecap stroke  grestore  grestore
end
 3137 2077 a 2036 2124
a
 tx@Dict begin tx@NodeDict begin {3.22221 0.0 6.80566 3.40283 1.50693
} false /N@T-0-12-4-4-2 16 {InitRnode } NewNode end end
 2036 2124 a Fb(23)2064 1975 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-12-4-4 /N@T-0-12-4-4-2 InitNC { NCLine  } if end gsave
0.8 SLW 0  setgray 0 setlinecap stroke  grestore  grestore end
 2064 1975 a 2036 2192
a
 tx@Dict begin tx@NodeDict begin {3.22221 0.0 6.80566 3.40283 1.50693
} false /N@T-0-12-4-4-3 16 {InitRnode } NewNode end end
 2036 2192 a Fb(31)2064 1975 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-12-4-4 /N@T-0-12-4-4-3 InitNC { NCLine  } if end gsave
0.8 SLW 0  setgray 0 setlinecap stroke  grestore  grestore end
 2064 1975 a 2036 2262
a
 tx@Dict begin tx@NodeDict begin {3.22221 0.0 6.80566 3.40283 1.50693
} false /N@T-0-12-4-4-4 16 {InitRnode } NewNode end end
 2036 2262 a Fb(37)2064 2250 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-12-4-4 /N@T-0-12-4-4-4 InitNC { NCLine  } if end gsave
0.8 SLW 0  setgray 0 setlinecap stroke  grestore  grestore end
 2064 2250 a 2394 2194
a
 tx@Dict begin tx@NodeDict begin {3.22221 0.0 6.80566 3.40283 1.50693
} false /N@T-0-12-4-4-4-0 16 {InitRnode } NewNode end end
 2394 2194 a Fb(22)2422 2182 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-12-4-4-4 /N@T-0-12-4-4-4-0 InitNC { NCLine  } if end
gsave 0.8 SLW 0  setgray 0 setlinecap stroke  grestore  grestore end
 2422 2182 a 2721 2160
a
 tx@Dict begin tx@NodeDict begin {3.47221 0.0 13.95856 6.97928 1.50693
} false /N@T-0-12-4-4-4-0-0 16 {InitRnode } NewNode end end
 2721 2160 a Fb(25ab)2779 2148 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-12-4-4-4-0 /N@T-0-12-4-4-4-0-0 InitNC { NCLine  } if
end gsave 0.8 SLW 0  setgray 0 setlinecap stroke  grestore  grestore
end
 2779 2148 a 2751 2228
a
 tx@Dict begin tx@NodeDict begin {3.22221 0.0 6.80566 3.40283 1.50693
} false /N@T-0-12-4-4-4-0-1 16 {InitRnode } NewNode end end
 2751 2228 a Fb(21)2779 2216 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-12-4-4-4-0 /N@T-0-12-4-4-4-0-1 InitNC { NCLine  } if
end gsave 0.8 SLW 0  setgray 0 setlinecap stroke  grestore  grestore
end
 2779 2216 a 3109 2229
a
 tx@Dict begin tx@NodeDict begin {3.22221 0.0 6.80566 3.40283 1.50693
} false /N@T-0-12-4-4-4-0-1-0 16 {InitRnode } NewNode end end
 3109 2229 a Fb(30)3137 2216 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-12-4-4-4-0-1 /N@T-0-12-4-4-4-0-1-0 InitNC { NCLine 
} if end gsave 0.8 SLW 0  setgray 0 setlinecap stroke  grestore  grestore
end
 3137 2216 a 3436 2229
a
 tx@Dict begin tx@NodeDict begin {3.47221 0.0 13.95856 6.97928 1.50693
} false /N@T-0-12-4-4-4-0-1-0-0 16 {InitRnode } NewNode end end
 3436 2229 a Fb(25ab)3494 2216 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-12-4-4-4-0-1-0 /N@T-0-12-4-4-4-0-1-0-0 InitNC { NCLine
 } if end gsave 0.8 SLW 0  setgray 0 setlinecap stroke  grestore  grestore
end
 3494 2216 a 2394 2263
a
 tx@Dict begin tx@NodeDict begin {3.22221 0.0 6.80566 3.40283 1.50693
} false /N@T-0-12-4-4-4-1 16 {InitRnode } NewNode end end
 2394 2263 a Fb(23)2422 2182 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-12-4-4-4 /N@T-0-12-4-4-4-1 InitNC { NCLine  } if end
gsave 0.8 SLW 0  setgray 0 setlinecap stroke  grestore  grestore end
 2422 2182 a 2394 2331
a
 tx@Dict begin tx@NodeDict begin {3.22221 0.0 6.80566 3.40283 1.50693
} false /N@T-0-12-4-4-4-2 16 {InitRnode } NewNode end end
 2394 2331 a Fb(38)2422 2318 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-12-4-4-4 /N@T-0-12-4-4-4-2 InitNC { NCLine  } if end
gsave 0.8 SLW 0  setgray 0 setlinecap stroke  grestore  grestore end
 2422 2318 a 2751 2331
a
 tx@Dict begin tx@NodeDict begin {3.22221 0.0 6.80566 3.40283 1.50693
} false /N@T-0-12-4-4-4-2-0 16 {InitRnode } NewNode end end
 2751 2331 a Fb(39)2779 2318 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-12-4-4-4-2 /N@T-0-12-4-4-4-2-0 InitNC { NCLine  } if
end gsave 0.8 SLW 0  setgray 0 setlinecap stroke  grestore  grestore
end
 2779 2318 a 3109 2331
a
 tx@Dict begin tx@NodeDict begin {3.22221 0.0 6.80566 3.40283 1.50693
} false /N@T-0-12-4-4-4-2-0-0 16 {InitRnode } NewNode end end
 3109 2331 a Fb(26)3137 2318 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-12-4-4-4-2-0 /N@T-0-12-4-4-4-2-0-0 InitNC { NCLine 
} if end gsave 0.8 SLW 0  setgray 0 setlinecap stroke  grestore  grestore
end
 3137 2318 a 964 3178
a
 tx@Dict begin tx@NodeDict begin {3.22221 0.0 6.80566 3.40283 1.50693
} false /N@T-0-13 16 {InitRnode } NewNode end end
 964 3178 a Fb(35)992 3166 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0 /N@T-0-13 InitNC { NCLine  } if end gsave 0.8 SLW 0
 setgray 0 setlinecap stroke  grestore  grestore end
 992 3166 a 1335 2331 a
 tx@Dict begin tx@NodeDict begin {3.22221 0.0 3.40283 1.70142 1.50693
} false /N@T-0-13-0 16 {InitRnode } NewNode end end

1335 2331 a Fb(5)1350 2318 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-13 /N@T-0-13-0 InitNC { NCLine  } if end gsave 0.8 SLW
0  setgray 0 setlinecap stroke  grestore  grestore end
 1350 2318 a 1679 2331 a
 tx@Dict begin tx@NodeDict begin {3.22221 0.0 6.80566 3.40283 1.50693
} false /N@T-0-13-0-0 16 {InitRnode } NewNode end end

1679 2331 a Fb(16)1707 2318 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-13-0 /N@T-0-13-0-0 InitNC { NCLine  } if end gsave 0.8
SLW 0  setgray 0 setlinecap stroke  grestore  grestore end
 1707 2318 a 2036 2331 a
 tx@Dict begin tx@NodeDict begin {3.22221 0.0 6.80566 3.40283 1.50693
} false /N@T-0-13-0-0-0 16 {InitRnode } NewNode end end

2036 2331 a Fb(26)2064 2318 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-13-0-0 /N@T-0-13-0-0-0 InitNC { NCLine  } if end gsave
0.8 SLW 0  setgray 0 setlinecap stroke  grestore  grestore end
 2064 2318 a 1321 2399 a
 tx@Dict begin tx@NodeDict begin {3.22221 0.0 6.80566 3.40283 1.50693
} false /N@T-0-13-1 16 {InitRnode } NewNode end end

1321 2399 a Fb(24)1350 2386 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-13 /N@T-0-13-1 InitNC { NCLine  } if end gsave 0.8 SLW
0  setgray 0 setlinecap stroke  grestore  grestore end
 1350 2386 a 1679 2399 a
 tx@Dict begin tx@NodeDict begin {3.22221 0.0 6.80566 3.40283 1.50693
} false /N@T-0-13-1-0 16 {InitRnode } NewNode end end

1679 2399 a Fb(31)1707 2386 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-13-1 /N@T-0-13-1-0 InitNC { NCLine  } if end gsave 0.8
SLW 0  setgray 0 setlinecap stroke  grestore  grestore end
 1707 2386 a 1321 2467 a
 tx@Dict begin tx@NodeDict begin {3.22221 0.0 6.80566 3.40283 1.50693
} false /N@T-0-13-2 16 {InitRnode } NewNode end end

1321 2467 a Fb(26)1350 2318 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-13 /N@T-0-13-2 InitNC { NCLine  } if end gsave 0.8 SLW
0  setgray 0 setlinecap stroke  grestore  grestore end
 1350 2318 a 1336 2535 a
 tx@Dict begin tx@NodeDict begin {3.22221 0.0 3.40283 1.70142 1.50693
} false /N@T-0-13-3 16 {InitRnode } NewNode end end

1336 2535 a Fb(4)1350 2523 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-13 /N@T-0-13-3 InitNC { NCLine  } if end gsave 0.8 SLW
0  setgray 0 setlinecap stroke  grestore  grestore end
 1350 2523 a 1679 2536 a
 tx@Dict begin tx@NodeDict begin {3.22221 0.0 6.80566 3.40283 1.50693
} false /N@T-0-13-3-0 16 {InitRnode } NewNode end end

1679 2536 a Fb(15)1707 2523 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-13-3 /N@T-0-13-3-0 InitNC { NCLine  } if end gsave 0.8
SLW 0  setgray 0 setlinecap stroke  grestore  grestore end
 1707 2523 a 2007 2536 a
 tx@Dict begin tx@NodeDict begin {3.47221 0.0 13.95856 6.97928 1.50693
} false /N@T-0-13-3-0-0 16 {InitRnode } NewNode end end

2007 2536 a Fb(25ab)2064 2523 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-13-3-0 /N@T-0-13-3-0-0 InitNC { NCLine  } if end gsave
0.8 SLW 0  setgray 0 setlinecap stroke  grestore  grestore end
 2064 2523 a 1336 2604
a
 tx@Dict begin tx@NodeDict begin {3.22221 0.0 3.40283 1.70142 1.50693
} false /N@T-0-13-4 16 {InitRnode } NewNode end end
 1336 2604 a Fb(7)1350 2318 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-13 /N@T-0-13-4 InitNC { NCLine  } if end gsave 0.8 SLW
0  setgray 0 setlinecap stroke  grestore  grestore end
 1350 2318 a 1322 2672
a
 tx@Dict begin tx@NodeDict begin {3.22221 0.0 6.80566 3.40283 1.50693
} false /N@T-0-13-5 16 {InitRnode } NewNode end end
 1322 2672 a Fb(27)1350 2659 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-13 /N@T-0-13-5 InitNC { NCLine  } if end gsave 0.8 SLW
0  setgray 0 setlinecap stroke  grestore  grestore end
 1350 2659 a 1679 2672
a
 tx@Dict begin tx@NodeDict begin {3.22221 0.0 6.80566 3.40283 1.50693
} false /N@T-0-13-5-0 16 {InitRnode } NewNode end end
 1679 2672 a Fb(33)1707 2659 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-13-5 /N@T-0-13-5-0 InitNC { NCLine  } if end gsave 0.8
SLW 0  setgray 0 setlinecap stroke  grestore  grestore end
 1707 2659 a 1322 2740
a
 tx@Dict begin tx@NodeDict begin {3.22221 0.0 6.80566 3.40283 1.50693
} false /N@T-0-13-6 16 {InitRnode } NewNode end end
 1322 2740 a Fb(28)1350 2728 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-13 /N@T-0-13-6 InitNC { NCLine  } if end gsave 0.8 SLW
0  setgray 0 setlinecap stroke  grestore  grestore end
 1350 2728 a 1679 2741
a
 tx@Dict begin tx@NodeDict begin {3.22221 0.0 6.80566 3.40283 1.50693
} false /N@T-0-13-6-0 16 {InitRnode } NewNode end end
 1679 2741 a Fb(34)1707 2728 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-13-6 /N@T-0-13-6-0 InitNC { NCLine  } if end gsave 0.8
SLW 0  setgray 0 setlinecap stroke  grestore  grestore end
 1707 2728 a 1322 2809
a
 tx@Dict begin tx@NodeDict begin {3.22221 0.0 6.80566 3.40283 1.50693
} false /N@T-0-13-7 16 {InitRnode } NewNode end end
 1322 2809 a Fb(26)1350 2318 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-13 /N@T-0-13-7 InitNC { NCLine  } if end gsave 0.8 SLW
0  setgray 0 setlinecap stroke  grestore  grestore end
 1350 2318 a 1336 2877
a
 tx@Dict begin tx@NodeDict begin {3.22221 0.0 3.40283 1.70142 1.50693
} false /N@T-0-13-8 16 {InitRnode } NewNode end end
 1336 2877 a Fb(6)1350 2318 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-13 /N@T-0-13-8 InitNC { NCLine  } if end gsave 0.8 SLW
0  setgray 0 setlinecap stroke  grestore  grestore end
 1350 2318 a 1322 3032
a
 tx@Dict begin tx@NodeDict begin {3.22221 0.0 6.80566 3.40283 1.50693
} false /N@T-0-13-9 16 {InitRnode } NewNode end end
 1322 3032 a Fb(29)1350 3019 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-13 /N@T-0-13-9 InitNC { NCLine  } if end gsave 0.8 SLW
0  setgray 0 setlinecap stroke  grestore  grestore end
 1350 3019 a 1679 2809
a
 tx@Dict begin tx@NodeDict begin {3.22221 0.0 6.80566 3.40283 1.50693
} false /N@T-0-13-9-0 16 {InitRnode } NewNode end end
 1679 2809 a Fb(24)1707 2796 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-13-9 /N@T-0-13-9-0 InitNC { NCLine  } if end gsave 0.8
SLW 0  setgray 0 setlinecap stroke  grestore  grestore end
 1707 2796 a 2036 2809
a
 tx@Dict begin tx@NodeDict begin {3.22221 0.0 6.80566 3.40283 1.50693
} false /N@T-0-13-9-0-0 16 {InitRnode } NewNode end end
 2036 2809 a Fb(31)2064 2796 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-13-9-0 /N@T-0-13-9-0-0 InitNC { NCLine  } if end gsave
0.8 SLW 0  setgray 0 setlinecap stroke  grestore  grestore end
 2064 2796 a 1679 2913
a
 tx@Dict begin tx@NodeDict begin {3.22221 0.0 6.80566 3.40283 1.50693
} false /N@T-0-13-9-1 16 {InitRnode } NewNode end end
 1679 2913 a Fb(22)1707 2900 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-13-9 /N@T-0-13-9-1 InitNC { NCLine  } if end gsave 0.8
SLW 0  setgray 0 setlinecap stroke  grestore  grestore end
 1707 2900 a 2007 2879
a
 tx@Dict begin tx@NodeDict begin {3.47221 0.0 13.95856 6.97928 1.50693
} false /N@T-0-13-9-1-0 16 {InitRnode } NewNode end end
 2007 2879 a Fb(25ab)2064 2866 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-13-9-1 /N@T-0-13-9-1-0 InitNC { NCLine  } if end gsave
0.8 SLW 0  setgray 0 setlinecap stroke  grestore  grestore end
 2064 2866 a 2036 2947
a
 tx@Dict begin tx@NodeDict begin {3.22221 0.0 6.80566 3.40283 1.50693
} false /N@T-0-13-9-1-1 16 {InitRnode } NewNode end end
 2036 2947 a Fb(21)2064 2935 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-13-9-1 /N@T-0-13-9-1-1 InitNC { NCLine  } if end gsave
0.8 SLW 0  setgray 0 setlinecap stroke  grestore  grestore end
 2064 2935 a 2394 2948
a
 tx@Dict begin tx@NodeDict begin {3.22221 0.0 6.80566 3.40283 1.50693
} false /N@T-0-13-9-1-1-0 16 {InitRnode } NewNode end end
 2394 2948 a Fb(30)2422 2935 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-13-9-1-1 /N@T-0-13-9-1-1-0 InitNC { NCLine  } if end
gsave 0.8 SLW 0  setgray 0 setlinecap stroke  grestore  grestore end
 2422 2935 a 2721 2948
a
 tx@Dict begin tx@NodeDict begin {3.47221 0.0 13.95856 6.97928 1.50693
} false /N@T-0-13-9-1-1-0-0 16 {InitRnode } NewNode end end
 2721 2948 a Fb(25ab)2779 2935 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-13-9-1-1-0 /N@T-0-13-9-1-1-0-0 InitNC { NCLine  } if
end gsave 0.8 SLW 0  setgray 0 setlinecap stroke  grestore  grestore
end
 2779 2935 a 1679 2981
a
 tx@Dict begin tx@NodeDict begin {3.22221 0.0 6.80566 3.40283 1.50693
} false /N@T-0-13-9-2 16 {InitRnode } NewNode end end
 1679 2981 a Fb(23)1707 2796 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-13-9 /N@T-0-13-9-2 InitNC { NCLine  } if end gsave 0.8
SLW 0  setgray 0 setlinecap stroke  grestore  grestore end
 1707 2796 a 1679 3050
a
 tx@Dict begin tx@NodeDict begin {3.22221 0.0 6.80566 3.40283 1.50693
} false /N@T-0-13-9-3 16 {InitRnode } NewNode end end
 1679 3050 a Fb(24)1707 3037 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-13-9 /N@T-0-13-9-3 InitNC { NCLine  } if end gsave 0.8
SLW 0  setgray 0 setlinecap stroke  grestore  grestore end
 1707 3037 a 2036 3050
a
 tx@Dict begin tx@NodeDict begin {3.22221 0.0 6.80566 3.40283 1.50693
} false /N@T-0-13-9-3-0 16 {InitRnode } NewNode end end
 2036 3050 a Fb(31)2064 3037 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-13-9-3 /N@T-0-13-9-3-0 InitNC { NCLine  } if end gsave
0.8 SLW 0  setgray 0 setlinecap stroke  grestore  grestore end
 2064 3037 a 1679 3255
a
 tx@Dict begin tx@NodeDict begin {3.22221 0.0 6.80566 3.40283 1.50693
} false /N@T-0-13-9-4 16 {InitRnode } NewNode end end
 1679 3255 a Fb(36)1707 3243 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-13-9 /N@T-0-13-9-4 InitNC { NCLine  } if end gsave 0.8
SLW 0  setgray 0 setlinecap stroke  grestore  grestore end
 1707 3243 a 2036 3118
a
 tx@Dict begin tx@NodeDict begin {3.22221 0.0 6.80566 3.40283 1.50693
} false /N@T-0-13-9-4-0 16 {InitRnode } NewNode end end
 2036 3118 a Fb(31)2064 3105 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-13-9-4 /N@T-0-13-9-4-0 InitNC { NCLine  } if end gsave
0.8 SLW 0  setgray 0 setlinecap stroke  grestore  grestore end
 2064 3105 a 2036 3186
a
 tx@Dict begin tx@NodeDict begin {3.22221 0.0 6.80566 3.40283 1.50693
} false /N@T-0-13-9-4-1 16 {InitRnode } NewNode end end
 2036 3186 a Fb(22)2064 3174 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-13-9-4 /N@T-0-13-9-4-1 InitNC { NCLine  } if end gsave
0.8 SLW 0  setgray 0 setlinecap stroke  grestore  grestore end
 2064 3174 a 2364 3152
a
 tx@Dict begin tx@NodeDict begin {3.47221 0.0 13.95856 6.97928 1.50693
} false /N@T-0-13-9-4-1-0 16 {InitRnode } NewNode end end
 2364 3152 a Fb(25ab)2422 3139 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-13-9-4-1 /N@T-0-13-9-4-1-0 InitNC { NCLine  } if end
gsave 0.8 SLW 0  setgray 0 setlinecap stroke  grestore  grestore end
 2422 3139 a 2394 3220
a
 tx@Dict begin tx@NodeDict begin {3.22221 0.0 6.80566 3.40283 1.50693
} false /N@T-0-13-9-4-1-1 16 {InitRnode } NewNode end end
 2394 3220 a Fb(21)2422 3208 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-13-9-4-1 /N@T-0-13-9-4-1-1 InitNC { NCLine  } if end
gsave 0.8 SLW 0  setgray 0 setlinecap stroke  grestore  grestore end
 2422 3208 a 2751 3221
a
 tx@Dict begin tx@NodeDict begin {3.22221 0.0 6.80566 3.40283 1.50693
} false /N@T-0-13-9-4-1-1-0 16 {InitRnode } NewNode end end
 2751 3221 a Fb(30)2779 3208 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-13-9-4-1-1 /N@T-0-13-9-4-1-1-0 InitNC { NCLine  } if
end gsave 0.8 SLW 0  setgray 0 setlinecap stroke  grestore  grestore
end
 2779 3208 a 3079 3221
a
 tx@Dict begin tx@NodeDict begin {3.47221 0.0 13.95856 6.97928 1.50693
} false /N@T-0-13-9-4-1-1-0-0 16 {InitRnode } NewNode end end
 3079 3221 a Fb(25ab)3137 3208 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-13-9-4-1-1-0 /N@T-0-13-9-4-1-1-0-0 InitNC { NCLine 
} if end gsave 0.8 SLW 0  setgray 0 setlinecap stroke  grestore  grestore
end
 3137 3208 a 2036 3254
a
 tx@Dict begin tx@NodeDict begin {3.22221 0.0 6.80566 3.40283 1.50693
} false /N@T-0-13-9-4-2 16 {InitRnode } NewNode end end
 2036 3254 a Fb(23)2064 3105 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-13-9-4 /N@T-0-13-9-4-2 InitNC { NCLine  } if end gsave
0.8 SLW 0  setgray 0 setlinecap stroke  grestore  grestore end
 2064 3105 a 2036 3323
a
 tx@Dict begin tx@NodeDict begin {3.22221 0.0 6.80566 3.40283 1.50693
} false /N@T-0-13-9-4-3 16 {InitRnode } NewNode end end
 2036 3323 a Fb(31)2064 3105 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-13-9-4 /N@T-0-13-9-4-3 InitNC { NCLine  } if end gsave
0.8 SLW 0  setgray 0 setlinecap stroke  grestore  grestore end
 2064 3105 a 2036 3393
a
 tx@Dict begin tx@NodeDict begin {3.22221 0.0 6.80566 3.40283 1.50693
} false /N@T-0-13-9-4-4 16 {InitRnode } NewNode end end
 2036 3393 a Fb(37)2064 3380 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-13-9-4 /N@T-0-13-9-4-4 InitNC { NCLine  } if end gsave
0.8 SLW 0  setgray 0 setlinecap stroke  grestore  grestore end
 2064 3380 a 2394 3325
a
 tx@Dict begin tx@NodeDict begin {3.22221 0.0 6.80566 3.40283 1.50693
} false /N@T-0-13-9-4-4-0 16 {InitRnode } NewNode end end
 2394 3325 a Fb(22)2422 3312 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-13-9-4-4 /N@T-0-13-9-4-4-0 InitNC { NCLine  } if end
gsave 0.8 SLW 0  setgray 0 setlinecap stroke  grestore  grestore end
 2422 3312 a 2721 3290
a
 tx@Dict begin tx@NodeDict begin {3.47221 0.0 13.95856 6.97928 1.50693
} false /N@T-0-13-9-4-4-0-0 16 {InitRnode } NewNode end end
 2721 3290 a Fb(25ab)2779 3278 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-13-9-4-4-0 /N@T-0-13-9-4-4-0-0 InitNC { NCLine  } if
end gsave 0.8 SLW 0  setgray 0 setlinecap stroke  grestore  grestore
end
 2779 3278 a 2751 3359
a
 tx@Dict begin tx@NodeDict begin {3.22221 0.0 6.80566 3.40283 1.50693
} false /N@T-0-13-9-4-4-0-1 16 {InitRnode } NewNode end end
 2751 3359 a Fb(21)2779 3346 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-13-9-4-4-0 /N@T-0-13-9-4-4-0-1 InitNC { NCLine  } if
end gsave 0.8 SLW 0  setgray 0 setlinecap stroke  grestore  grestore
end
 2779 3346 a 3109 3359
a
 tx@Dict begin tx@NodeDict begin {3.22221 0.0 6.80566 3.40283 1.50693
} false /N@T-0-13-9-4-4-0-1-0 16 {InitRnode } NewNode end end
 3109 3359 a Fb(30)3137 3346 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-13-9-4-4-0-1 /N@T-0-13-9-4-4-0-1-0 InitNC { NCLine 
} if end gsave 0.8 SLW 0  setgray 0 setlinecap stroke  grestore  grestore
end
 3137 3346 a 3436 3359
a
 tx@Dict begin tx@NodeDict begin {3.47221 0.0 13.95856 6.97928 1.50693
} false /N@T-0-13-9-4-4-0-1-0-0 16 {InitRnode } NewNode end end
 3436 3359 a Fb(25ab)3494 3346 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-13-9-4-4-0-1-0 /N@T-0-13-9-4-4-0-1-0-0 InitNC { NCLine
 } if end gsave 0.8 SLW 0  setgray 0 setlinecap stroke  grestore  grestore
end
 3494 3346 a 2394 3393
a
 tx@Dict begin tx@NodeDict begin {3.22221 0.0 6.80566 3.40283 1.50693
} false /N@T-0-13-9-4-4-1 16 {InitRnode } NewNode end end
 2394 3393 a Fb(23)2422 3312 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-13-9-4-4 /N@T-0-13-9-4-4-1 InitNC { NCLine  } if end
gsave 0.8 SLW 0  setgray 0 setlinecap stroke  grestore  grestore end
 2422 3312 a 2394 3461
a
 tx@Dict begin tx@NodeDict begin {3.22221 0.0 6.80566 3.40283 1.50693
} false /N@T-0-13-9-4-4-2 16 {InitRnode } NewNode end end
 2394 3461 a Fb(38)2422 3449 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-13-9-4-4 /N@T-0-13-9-4-4-2 InitNC { NCLine  } if end
gsave 0.8 SLW 0  setgray 0 setlinecap stroke  grestore  grestore end
 2422 3449 a 2751 3462
a
 tx@Dict begin tx@NodeDict begin {3.22221 0.0 6.80566 3.40283 1.50693
} false /N@T-0-13-9-4-4-2-0 16 {InitRnode } NewNode end end
 2751 3462 a Fb(39)2779 3449 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-13-9-4-4-2 /N@T-0-13-9-4-4-2-0 InitNC { NCLine  } if
end gsave 0.8 SLW 0  setgray 0 setlinecap stroke  grestore  grestore
end
 2779 3449 a 3109 3462
a
 tx@Dict begin tx@NodeDict begin {3.22221 0.0 6.80566 3.40283 1.50693
} false /N@T-0-13-9-4-4-2-0-0 16 {InitRnode } NewNode end end
 3109 3462 a Fb(26)3137 3449 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-13-9-4-4-2-0 /N@T-0-13-9-4-4-2-0-0 InitNC { NCLine 
} if end gsave 0.8 SLW 0  setgray 0 setlinecap stroke  grestore  grestore
end
 3137 3449 a 1322 3100
a
 tx@Dict begin tx@NodeDict begin {3.22221 0.0 6.80566 3.40283 1.50693
} false /N@T-0-13-10 16 {InitRnode } NewNode end end
 1322 3100 a Fb(26)1350 2318 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-13 /N@T-0-13-10 InitNC { NCLine  } if end gsave 0.8
SLW 0  setgray 0 setlinecap stroke  grestore  grestore end
 1350 2318 a 1322 3324
a
 tx@Dict begin tx@NodeDict begin {3.22221 0.0 6.80566 3.40283 1.50693
} false /N@T-0-13-11 16 {InitRnode } NewNode end end
 1322 3324 a Fb(16)1350 3311 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-13 /N@T-0-13-11 InitNC { NCLine  } if end gsave 0.8
SLW 0  setgray 0 setlinecap stroke  grestore  grestore end
 1350 3311 a 1679 3324
a
 tx@Dict begin tx@NodeDict begin {3.22221 0.0 6.80566 3.40283 1.50693
} false /N@T-0-13-11-0 16 {InitRnode } NewNode end end
 1679 3324 a Fb(26)1707 3311 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-13-11 /N@T-0-13-11-0 InitNC { NCLine  } if end gsave
0.8 SLW 0  setgray 0 setlinecap stroke  grestore  grestore end
 1707 3311 a 1322 4025
a
 tx@Dict begin tx@NodeDict begin {3.22221 0.0 6.80566 3.40283 1.50693
} false /N@T-0-13-12 16 {InitRnode } NewNode end end
 1322 4025 a Fb(40)1350 4013 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-13 /N@T-0-13-12 InitNC { NCLine  } if end gsave 0.8
SLW 0  setgray 0 setlinecap stroke  grestore  grestore end
 1350 4013 a 1693 3529
a
 tx@Dict begin tx@NodeDict begin {3.22221 0.0 3.40283 1.70142 1.50693
} false /N@T-0-13-12-0 16 {InitRnode } NewNode end end
 1693 3529 a Fb(5)1707 3517 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-13-12 /N@T-0-13-12-0 InitNC { NCLine  } if end gsave
0.8 SLW 0  setgray 0 setlinecap stroke  grestore  grestore end
 1707 3517 a 2036 3530
a
 tx@Dict begin tx@NodeDict begin {3.22221 0.0 6.80566 3.40283 1.50693
} false /N@T-0-13-12-0-0 16 {InitRnode } NewNode end end
 2036 3530 a Fb(16)2064 3517 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-13-12-0 /N@T-0-13-12-0-0 InitNC { NCLine  } if end gsave
0.8 SLW 0  setgray 0 setlinecap stroke  grestore  grestore end
 2064 3517 a 2394 3530
a
 tx@Dict begin tx@NodeDict begin {3.22221 0.0 6.80566 3.40283 1.50693
} false /N@T-0-13-12-0-0-0 16 {InitRnode } NewNode end end
 2394 3530 a Fb(26)2422 3517 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-13-12-0-0 /N@T-0-13-12-0-0-0 InitNC { NCLine  } if end
gsave 0.8 SLW 0  setgray 0 setlinecap stroke  grestore  grestore end
 2422 3517 a 1679 3598
a
 tx@Dict begin tx@NodeDict begin {3.22221 0.0 6.80566 3.40283 1.50693
} false /N@T-0-13-12-1 16 {InitRnode } NewNode end end
 1679 3598 a Fb(31)1707 3517 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-13-12 /N@T-0-13-12-1 InitNC { NCLine  } if end gsave
0.8 SLW 0  setgray 0 setlinecap stroke  grestore  grestore end
 1707 3517 a 1693 3666
a
 tx@Dict begin tx@NodeDict begin {3.22221 0.0 3.40283 1.70142 1.50693
} false /N@T-0-13-12-2 16 {InitRnode } NewNode end end
 1693 3666 a Fb(4)1707 3653 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-13-12 /N@T-0-13-12-2 InitNC { NCLine  } if end gsave
0.8 SLW 0  setgray 0 setlinecap stroke  grestore  grestore end
 1707 3653 a 2036 3666
a
 tx@Dict begin tx@NodeDict begin {3.22221 0.0 6.80566 3.40283 1.50693
} false /N@T-0-13-12-2-0 16 {InitRnode } NewNode end end
 2036 3666 a Fb(15)2064 3653 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-13-12-2 /N@T-0-13-12-2-0 InitNC { NCLine  } if end gsave
0.8 SLW 0  setgray 0 setlinecap stroke  grestore  grestore end
 2064 3653 a 2364 3666
a
 tx@Dict begin tx@NodeDict begin {3.47221 0.0 13.95856 6.97928 1.50693
} false /N@T-0-13-12-2-0-0 16 {InitRnode } NewNode end end
 2364 3666 a Fb(25ab)2422 3653 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-13-12-2-0 /N@T-0-13-12-2-0-0 InitNC { NCLine  } if end
gsave 0.8 SLW 0  setgray 0 setlinecap stroke  grestore  grestore end
 2422 3653 a 1693 3734
a
 tx@Dict begin tx@NodeDict begin {3.22221 0.0 3.40283 1.70142 1.50693
} false /N@T-0-13-12-3 16 {InitRnode } NewNode end end
 1693 3734 a Fb(7)1707 3517 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-13-12 /N@T-0-13-12-3 InitNC { NCLine  } if end gsave
0.8 SLW 0  setgray 0 setlinecap stroke  grestore  grestore end
 1707 3517 a 1679 3802
a
 tx@Dict begin tx@NodeDict begin {3.22221 0.0 6.80566 3.40283 1.50693
} false /N@T-0-13-12-4 16 {InitRnode } NewNode end end
 1679 3802 a Fb(33)1707 3517 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-13-12 /N@T-0-13-12-4 InitNC { NCLine  } if end gsave
0.8 SLW 0  setgray 0 setlinecap stroke  grestore  grestore end
 1707 3517 a 1679 3871
a
 tx@Dict begin tx@NodeDict begin {3.22221 0.0 6.80566 3.40283 1.50693
} false /N@T-0-13-12-5 16 {InitRnode } NewNode end end
 1679 3871 a Fb(34)1707 3517 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-13-12 /N@T-0-13-12-5 InitNC { NCLine  } if end gsave
0.8 SLW 0  setgray 0 setlinecap stroke  grestore  grestore end
 1707 3517 a 1693 3939
a
 tx@Dict begin tx@NodeDict begin {3.22221 0.0 3.40283 1.70142 1.50693
} false /N@T-0-13-12-6 16 {InitRnode } NewNode end end
 1693 3939 a Fb(6)1707 3517 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-13-12 /N@T-0-13-12-6 InitNC { NCLine  } if end gsave
0.8 SLW 0  setgray 0 setlinecap stroke  grestore  grestore end
 1707 3517 a 1679 4007
a
 tx@Dict begin tx@NodeDict begin {3.22221 0.0 6.80566 3.40283 1.50693
} false /N@T-0-13-12-7 16 {InitRnode } NewNode end end
 1679 4007 a Fb(36)1707 3995 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-13-12 /N@T-0-13-12-7 InitNC { NCLine  } if end gsave
0.8 SLW 0  setgray 0 setlinecap stroke  grestore  grestore end
 1707 3995 a 2036 3870
a
 tx@Dict begin tx@NodeDict begin {3.22221 0.0 6.80566 3.40283 1.50693
} false /N@T-0-13-12-7-0 16 {InitRnode } NewNode end end
 2036 3870 a Fb(31)2064 3857 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-13-12-7 /N@T-0-13-12-7-0 InitNC { NCLine  } if end gsave
0.8 SLW 0  setgray 0 setlinecap stroke  grestore  grestore end
 2064 3857 a 2036 3938
a
 tx@Dict begin tx@NodeDict begin {3.22221 0.0 6.80566 3.40283 1.50693
} false /N@T-0-13-12-7-1 16 {InitRnode } NewNode end end
 2036 3938 a Fb(22)2064 3925 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-13-12-7 /N@T-0-13-12-7-1 InitNC { NCLine  } if end gsave
0.8 SLW 0  setgray 0 setlinecap stroke  grestore  grestore end
 2064 3925 a 2364 3904
a
 tx@Dict begin tx@NodeDict begin {3.47221 0.0 13.95856 6.97928 1.50693
} false /N@T-0-13-12-7-1-0 16 {InitRnode } NewNode end end
 2364 3904 a Fb(25ab)2422 3891 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-13-12-7-1 /N@T-0-13-12-7-1-0 InitNC { NCLine  } if end
gsave 0.8 SLW 0  setgray 0 setlinecap stroke  grestore  grestore end
 2422 3891 a 2394 3972
a
 tx@Dict begin tx@NodeDict begin {3.22221 0.0 6.80566 3.40283 1.50693
} false /N@T-0-13-12-7-1-1 16 {InitRnode } NewNode end end
 2394 3972 a Fb(21)2422 3960 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-13-12-7-1 /N@T-0-13-12-7-1-1 InitNC { NCLine  } if end
gsave 0.8 SLW 0  setgray 0 setlinecap stroke  grestore  grestore end
 2422 3960 a 2751 3973
a
 tx@Dict begin tx@NodeDict begin {3.22221 0.0 6.80566 3.40283 1.50693
} false /N@T-0-13-12-7-1-1-0 16 {InitRnode } NewNode end end
 2751 3973 a Fb(30)2779 3960 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-13-12-7-1-1 /N@T-0-13-12-7-1-1-0 InitNC { NCLine  }
if end gsave 0.8 SLW 0  setgray 0 setlinecap stroke  grestore  grestore
end
 2779 3960 a 3079 3973
a
 tx@Dict begin tx@NodeDict begin {3.47221 0.0 13.95856 6.97928 1.50693
} false /N@T-0-13-12-7-1-1-0-0 16 {InitRnode } NewNode end end
 3079 3973 a Fb(25ab)3137 3960 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-13-12-7-1-1-0 /N@T-0-13-12-7-1-1-0-0 InitNC { NCLine
 } if end gsave 0.8 SLW 0  setgray 0 setlinecap stroke  grestore  grestore
end
 3137 3960 a 2036 4006
a
 tx@Dict begin tx@NodeDict begin {3.22221 0.0 6.80566 3.40283 1.50693
} false /N@T-0-13-12-7-2 16 {InitRnode } NewNode end end
 2036 4006 a Fb(23)2064 3857 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-13-12-7 /N@T-0-13-12-7-2 InitNC { NCLine  } if end gsave
0.8 SLW 0  setgray 0 setlinecap stroke  grestore  grestore end
 2064 3857 a 2036 4074
a
 tx@Dict begin tx@NodeDict begin {3.22221 0.0 6.80566 3.40283 1.50693
} false /N@T-0-13-12-7-3 16 {InitRnode } NewNode end end
 2036 4074 a Fb(31)2064 3857 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-13-12-7 /N@T-0-13-12-7-3 InitNC { NCLine  } if end gsave
0.8 SLW 0  setgray 0 setlinecap stroke  grestore  grestore end
 2064 3857 a 2036 4145
a
 tx@Dict begin tx@NodeDict begin {3.22221 0.0 6.80566 3.40283 1.50693
} false /N@T-0-13-12-7-4 16 {InitRnode } NewNode end end
 2036 4145 a Fb(37)2064 4132 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-13-12-7 /N@T-0-13-12-7-4 InitNC { NCLine  } if end gsave
0.8 SLW 0  setgray 0 setlinecap stroke  grestore  grestore end
 2064 4132 a 2394 4077
a
 tx@Dict begin tx@NodeDict begin {3.22221 0.0 6.80566 3.40283 1.50693
} false /N@T-0-13-12-7-4-0 16 {InitRnode } NewNode end end
 2394 4077 a Fb(22)2422 4064 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-13-12-7-4 /N@T-0-13-12-7-4-0 InitNC { NCLine  } if end
gsave 0.8 SLW 0  setgray 0 setlinecap stroke  grestore  grestore end
 2422 4064 a 2721 4042
a
 tx@Dict begin tx@NodeDict begin {3.47221 0.0 13.95856 6.97928 1.50693
} false /N@T-0-13-12-7-4-0-0 16 {InitRnode } NewNode end end
 2721 4042 a Fb(25ab)2779 4030 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-13-12-7-4-0 /N@T-0-13-12-7-4-0-0 InitNC { NCLine  }
if end gsave 0.8 SLW 0  setgray 0 setlinecap stroke  grestore  grestore
end
 2779 4030 a 2751 4111
a
 tx@Dict begin tx@NodeDict begin {3.22221 0.0 6.80566 3.40283 1.50693
} false /N@T-0-13-12-7-4-0-1 16 {InitRnode } NewNode end end
 2751 4111 a Fb(21)2779 4098 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-13-12-7-4-0 /N@T-0-13-12-7-4-0-1 InitNC { NCLine  }
if end gsave 0.8 SLW 0  setgray 0 setlinecap stroke  grestore  grestore
end
 2779 4098 a 3109 4111
a
 tx@Dict begin tx@NodeDict begin {3.22221 0.0 6.80566 3.40283 1.50693
} false /N@T-0-13-12-7-4-0-1-0 16 {InitRnode } NewNode end end
 3109 4111 a Fb(30)3137 4098 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-13-12-7-4-0-1 /N@T-0-13-12-7-4-0-1-0 InitNC { NCLine
 } if end gsave 0.8 SLW 0  setgray 0 setlinecap stroke  grestore  grestore
end
 3137 4098 a 3436 4111
a
 tx@Dict begin tx@NodeDict begin {3.47221 0.0 13.95856 6.97928 1.50693
} false /N@T-0-13-12-7-4-0-1-0-0 16 {InitRnode } NewNode end end
 3436 4111 a Fb(25ab)3494 4098 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-13-12-7-4-0-1-0 /N@T-0-13-12-7-4-0-1-0-0 InitNC { NCLine
 } if end gsave 0.8 SLW 0  setgray 0 setlinecap stroke  grestore  grestore
end
 3494 4098 a 2394 4145
a
 tx@Dict begin tx@NodeDict begin {3.22221 0.0 6.80566 3.40283 1.50693
} false /N@T-0-13-12-7-4-1 16 {InitRnode } NewNode end end
 2394 4145 a Fb(23)2422 4064 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-13-12-7-4 /N@T-0-13-12-7-4-1 InitNC { NCLine  } if end
gsave 0.8 SLW 0  setgray 0 setlinecap stroke  grestore  grestore end
 2422 4064 a 2394 4213
a
 tx@Dict begin tx@NodeDict begin {3.22221 0.0 6.80566 3.40283 1.50693
} false /N@T-0-13-12-7-4-2 16 {InitRnode } NewNode end end
 2394 4213 a Fb(38)2422 4201 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-13-12-7-4 /N@T-0-13-12-7-4-2 InitNC { NCLine  } if end
gsave 0.8 SLW 0  setgray 0 setlinecap stroke  grestore  grestore end
 2422 4201 a 2751 4214
a
 tx@Dict begin tx@NodeDict begin {3.22221 0.0 6.80566 3.40283 1.50693
} false /N@T-0-13-12-7-4-2-0 16 {InitRnode } NewNode end end
 2751 4214 a Fb(39)2779 4201 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-13-12-7-4-2 /N@T-0-13-12-7-4-2-0 InitNC { NCLine  }
if end gsave 0.8 SLW 0  setgray 0 setlinecap stroke  grestore  grestore
end
 2779 4201 a 3109 4214
a
 tx@Dict begin tx@NodeDict begin {3.22221 0.0 6.80566 3.40283 1.50693
} false /N@T-0-13-12-7-4-2-0-0 16 {InitRnode } NewNode end end
 3109 4214 a Fb(26)3137 4201 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-13-12-7-4-2-0 /N@T-0-13-12-7-4-2-0-0 InitNC { NCLine
 } if end gsave 0.8 SLW 0  setgray 0 setlinecap stroke  grestore  grestore
end
 3137 4201 a 1679 4213
a
 tx@Dict begin tx@NodeDict begin {3.22221 0.0 6.80566 3.40283 1.50693
} false /N@T-0-13-12-8 16 {InitRnode } NewNode end end
 1679 4213 a Fb(16)1707 4201 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-13-12 /N@T-0-13-12-8 InitNC { NCLine  } if end gsave
0.8 SLW 0  setgray 0 setlinecap stroke  grestore  grestore end
 1707 4201 a 2036 4214
a
 tx@Dict begin tx@NodeDict begin {3.22221 0.0 6.80566 3.40283 1.50693
} false /N@T-0-13-12-8-0 16 {InitRnode } NewNode end end
 2036 4214 a Fb(26)2064 4201 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-13-12-8 /N@T-0-13-12-8-0 InitNC { NCLine  } if end gsave
0.8 SLW 0  setgray 0 setlinecap stroke  grestore  grestore end
 2064 4201 a 1679 4521
a
 tx@Dict begin tx@NodeDict begin {3.22221 0.0 6.80566 3.40283 1.50693
} false /N@T-0-13-12-9 16 {InitRnode } NewNode end end
 1679 4521 a Fb(41)1707 4509 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-13-12 /N@T-0-13-12-9 InitNC { NCLine  } if end gsave
0.8 SLW 0  setgray 0 setlinecap stroke  grestore  grestore end
 1707 4509 a 2050 4281
a
 tx@Dict begin tx@NodeDict begin {3.22221 0.0 3.40283 1.70142 1.50693
} false /N@T-0-13-12-9-0 16 {InitRnode } NewNode end end
 2050 4281 a Fb(5)2064 4269 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-13-12-9 /N@T-0-13-12-9-0 InitNC { NCLine  } if end gsave
0.8 SLW 0  setgray 0 setlinecap stroke  grestore  grestore end
 2064 4269 a 2394 4282
a
 tx@Dict begin tx@NodeDict begin {3.22221 0.0 6.80566 3.40283 1.50693
} false /N@T-0-13-12-9-0-0 16 {InitRnode } NewNode end end
 2394 4282 a Fb(16)2422 4269 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-13-12-9-0 /N@T-0-13-12-9-0-0 InitNC { NCLine  } if end
gsave 0.8 SLW 0  setgray 0 setlinecap stroke  grestore  grestore end
 2422 4269 a 2751 4282
a
 tx@Dict begin tx@NodeDict begin {3.22221 0.0 6.80566 3.40283 1.50693
} false /N@T-0-13-12-9-0-0-0 16 {InitRnode } NewNode end end
 2751 4282 a Fb(26)2779 4269 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-13-12-9-0-0 /N@T-0-13-12-9-0-0-0 InitNC { NCLine  }
if end gsave 0.8 SLW 0  setgray 0 setlinecap stroke  grestore  grestore
end
 2779 4269 a 2050 4352
a
 tx@Dict begin tx@NodeDict begin {3.22221 0.0 3.40283 1.70142 1.50693
} false /N@T-0-13-12-9-1 16 {InitRnode } NewNode end end
 2050 4352 a Fb(4)2064 4339 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-13-12-9 /N@T-0-13-12-9-1 InitNC { NCLine  } if end gsave
0.8 SLW 0  setgray 0 setlinecap stroke  grestore  grestore end
 2064 4339 a 2394 4352
a
 tx@Dict begin tx@NodeDict begin {3.22221 0.0 6.80566 3.40283 1.50693
} false /N@T-0-13-12-9-1-0 16 {InitRnode } NewNode end end
 2394 4352 a Fb(15)2422 4339 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-13-12-9-1 /N@T-0-13-12-9-1-0 InitNC { NCLine  } if end
gsave 0.8 SLW 0  setgray 0 setlinecap stroke  grestore  grestore end
 2422 4339 a 2721 4352
a
 tx@Dict begin tx@NodeDict begin {3.47221 0.0 13.95856 6.97928 1.50693
} false /N@T-0-13-12-9-1-0-0 16 {InitRnode } NewNode end end
 2721 4352 a Fb(25ab)2779 4339 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-13-12-9-1-0 /N@T-0-13-12-9-1-0-0 InitNC { NCLine  }
if end gsave 0.8 SLW 0  setgray 0 setlinecap stroke  grestore  grestore
end
 2779 4339 a 2050 4420
a
 tx@Dict begin tx@NodeDict begin {3.22221 0.0 3.40283 1.70142 1.50693
} false /N@T-0-13-12-9-2 16 {InitRnode } NewNode end end
 2050 4420 a Fb(7)2064 4269 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-13-12-9 /N@T-0-13-12-9-2 InitNC { NCLine  } if end gsave
0.8 SLW 0  setgray 0 setlinecap stroke  grestore  grestore end
 2064 4269 a 2050 4488
a
 tx@Dict begin tx@NodeDict begin {3.22221 0.0 3.40283 1.70142 1.50693
} false /N@T-0-13-12-9-3 16 {InitRnode } NewNode end end
 2050 4488 a Fb(6)2064 4269 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-13-12-9 /N@T-0-13-12-9-3 InitNC { NCLine  } if end gsave
0.8 SLW 0  setgray 0 setlinecap stroke  grestore  grestore end
 2064 4269 a 2036 4556
a
 tx@Dict begin tx@NodeDict begin {3.22221 0.0 6.80566 3.40283 1.50693
} false /N@T-0-13-12-9-4 16 {InitRnode } NewNode end end
 2036 4556 a Fb(37)2064 4544 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-13-12-9 /N@T-0-13-12-9-4 InitNC { NCLine  } if end gsave
0.8 SLW 0  setgray 0 setlinecap stroke  grestore  grestore end
 2064 4544 a 2394 4488
a
 tx@Dict begin tx@NodeDict begin {3.22221 0.0 6.80566 3.40283 1.50693
} false /N@T-0-13-12-9-4-0 16 {InitRnode } NewNode end end
 2394 4488 a Fb(22)2422 4476 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-13-12-9-4 /N@T-0-13-12-9-4-0 InitNC { NCLine  } if end
gsave 0.8 SLW 0  setgray 0 setlinecap stroke  grestore  grestore end
 2422 4476 a 2721 4454
a
 tx@Dict begin tx@NodeDict begin {3.47221 0.0 13.95856 6.97928 1.50693
} false /N@T-0-13-12-9-4-0-0 16 {InitRnode } NewNode end end
 2721 4454 a Fb(25ab)2779 4442 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-13-12-9-4-0 /N@T-0-13-12-9-4-0-0 InitNC { NCLine  }
if end gsave 0.8 SLW 0  setgray 0 setlinecap stroke  grestore  grestore
end
 2779 4442 a 2751 4522
a
 tx@Dict begin tx@NodeDict begin {3.22221 0.0 6.80566 3.40283 1.50693
} false /N@T-0-13-12-9-4-0-1 16 {InitRnode } NewNode end end
 2751 4522 a Fb(21)2779 4510 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-13-12-9-4-0 /N@T-0-13-12-9-4-0-1 InitNC { NCLine  }
if end gsave 0.8 SLW 0  setgray 0 setlinecap stroke  grestore  grestore
end
 2779 4510 a 3109 4523
a
 tx@Dict begin tx@NodeDict begin {3.22221 0.0 6.80566 3.40283 1.50693
} false /N@T-0-13-12-9-4-0-1-0 16 {InitRnode } NewNode end end
 3109 4523 a Fb(30)3137 4510 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-13-12-9-4-0-1 /N@T-0-13-12-9-4-0-1-0 InitNC { NCLine
 } if end gsave 0.8 SLW 0  setgray 0 setlinecap stroke  grestore  grestore
end
 3137 4510 a 3436 4523
a
 tx@Dict begin tx@NodeDict begin {3.47221 0.0 13.95856 6.97928 1.50693
} false /N@T-0-13-12-9-4-0-1-0-0 16 {InitRnode } NewNode end end
 3436 4523 a Fb(25ab)3494 4510 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-13-12-9-4-0-1-0 /N@T-0-13-12-9-4-0-1-0-0 InitNC { NCLine
 } if end gsave 0.8 SLW 0  setgray 0 setlinecap stroke  grestore  grestore
end
 3494 4510 a 2394 4557
a
 tx@Dict begin tx@NodeDict begin {3.22221 0.0 6.80566 3.40283 1.50693
} false /N@T-0-13-12-9-4-1 16 {InitRnode } NewNode end end
 2394 4557 a Fb(23)2422 4476 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-13-12-9-4 /N@T-0-13-12-9-4-1 InitNC { NCLine  } if end
gsave 0.8 SLW 0  setgray 0 setlinecap stroke  grestore  grestore end
 2422 4476 a 2394 4625
a
 tx@Dict begin tx@NodeDict begin {3.22221 0.0 6.80566 3.40283 1.50693
} false /N@T-0-13-12-9-4-2 16 {InitRnode } NewNode end end
 2394 4625 a Fb(38)2422 4612 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-13-12-9-4 /N@T-0-13-12-9-4-2 InitNC { NCLine  } if end
gsave 0.8 SLW 0  setgray 0 setlinecap stroke  grestore  grestore end
 2422 4612 a 2751 4625
a
 tx@Dict begin tx@NodeDict begin {3.22221 0.0 6.80566 3.40283 1.50693
} false /N@T-0-13-12-9-4-2-0 16 {InitRnode } NewNode end end
 2751 4625 a Fb(39)2779 4612 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-13-12-9-4-2 /N@T-0-13-12-9-4-2-0 InitNC { NCLine  }
if end gsave 0.8 SLW 0  setgray 0 setlinecap stroke  grestore  grestore
end
 2779 4612 a 3109 4625
a
 tx@Dict begin tx@NodeDict begin {3.22221 0.0 6.80566 3.40283 1.50693
} false /N@T-0-13-12-9-4-2-0-0 16 {InitRnode } NewNode end end
 3109 4625 a Fb(26)3137 4612 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-13-12-9-4-2-0 /N@T-0-13-12-9-4-2-0-0 InitNC { NCLine
 } if end gsave 0.8 SLW 0  setgray 0 setlinecap stroke  grestore  grestore
end
 3137 4612 a 2036 4693
a
 tx@Dict begin tx@NodeDict begin {3.22221 0.0 6.80566 3.40283 1.50693
} false /N@T-0-13-12-9-5 16 {InitRnode } NewNode end end
 2036 4693 a Fb(16)2064 4680 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-13-12-9 /N@T-0-13-12-9-5 InitNC { NCLine  } if end gsave
0.8 SLW 0  setgray 0 setlinecap stroke  grestore  grestore end
 2064 4680 a 2394 4693
a
 tx@Dict begin tx@NodeDict begin {3.22221 0.0 6.80566 3.40283 1.50693
} false /N@T-0-13-12-9-5-0 16 {InitRnode } NewNode end end
 2394 4693 a Fb(26)2422 4680 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-13-12-9-5 /N@T-0-13-12-9-5-0 InitNC { NCLine  } if end
gsave 0.8 SLW 0  setgray 0 setlinecap stroke  grestore  grestore end
 2422 4680 a 2036 4761
a
 tx@Dict begin tx@NodeDict begin {3.22221 0.0 6.80566 3.40283 1.50693
} false /N@T-0-13-12-9-6 16 {InitRnode } NewNode end end
 2036 4761 a Fb(38)2064 4749 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-13-12-9 /N@T-0-13-12-9-6 InitNC { NCLine  } if end gsave
0.8 SLW 0  setgray 0 setlinecap stroke  grestore  grestore end
 2064 4749 a 2394 4762
a
 tx@Dict begin tx@NodeDict begin {3.22221 0.0 6.80566 3.40283 1.50693
} false /N@T-0-13-12-9-6-0 16 {InitRnode } NewNode end end
 2394 4762 a Fb(39)2422 4749 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-13-12-9-6 /N@T-0-13-12-9-6-0 InitNC { NCLine  } if end
gsave 0.8 SLW 0  setgray 0 setlinecap stroke  grestore  grestore end
 2422 4749 a 2751 4762
a
 tx@Dict begin tx@NodeDict begin {3.22221 0.0 6.80566 3.40283 1.50693
} false /N@T-0-13-12-9-6-0-0 16 {InitRnode } NewNode end end
 2751 4762 a Fb(26)2779 4749 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 1.0
1.0 0 0 /N@T-0-13-12-9-6-0 /N@T-0-13-12-9-6-0-0 InitNC { NCLine  }
if end gsave 0.8 SLW 0  setgray 0 setlinecap stroke  grestore  grestore
end
 2779 4749 a 0 TeXcolorgray
1590 4909 a Fa(Figure)27 b(1:)36 b(pattern11)p 0 TeXcolorgray
Black 0 TeXcolorgray 1926 5255 a(1)p Black eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
